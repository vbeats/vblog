import{o as n,c as a,d as s}from"./app.9f9f1749.js";const e='{"title":"K8s","description":"","frontmatter":{},"headers":[{"level":2,"title":"K8s","slug":"k8s"},{"level":3,"title":"kubeadm 引导集群","slug":"kubeadm-引导集群"},{"level":3,"title":"初始化集群","slug":"初始化集群"},{"level":3,"title":"dashboard","slug":"dashboard"},{"level":3,"title":"高可用集群","slug":"高可用集群"},{"level":2,"title":"kubectl","slug":"kubectl"},{"level":2,"title":"pod","slug":"pod"},{"level":3,"title":"生命周期","slug":"生命周期"},{"level":3,"title":"状态检测","slug":"状态检测"},{"level":3,"title":"类型","slug":"类型"},{"level":2,"title":"服务发现","slug":"服务发现"},{"level":3,"title":"port","slug":"port"},{"level":3,"title":"headless service","slug":"headless-service"},{"level":3,"title":"ExternalName","slug":"externalname"},{"level":3,"title":"ingress 负载均衡器","slug":"ingress-负载均衡器"},{"level":2,"title":"存储","slug":"存储"},{"level":3,"title":"config map","slug":"config-map"},{"level":3,"title":"secret","slug":"secret"},{"level":3,"title":"volume","slug":"volume"},{"level":3,"title":"pv/pvc","slug":"pv-pvc"},{"level":2,"title":"工作负载","slug":"工作负载"},{"level":3,"title":"Replication Controllers","slug":"replication-controllers"},{"level":3,"title":"Replica Sets","slug":"replica-sets"},{"level":3,"title":"Deployment","slug":"deployment"},{"level":3,"title":"Daemon Sets","slug":"daemon-sets"},{"level":3,"title":"Stateful Sets","slug":"stateful-sets"},{"level":3,"title":"Cron Jobs","slug":"cron-jobs"},{"level":3,"title":"Jobs","slug":"jobs"},{"level":3,"title":"hpa","slug":"hpa"},{"level":2,"title":"调度器","slug":"调度器"},{"level":3,"title":"调度过程","slug":"调度过程"},{"level":3,"title":"affinity","slug":"affinity"},{"level":3,"title":"taint/toleration","slug":"taint-toleration"},{"level":3,"title":"指定节点","slug":"指定节点"},{"level":3,"title":"安全控制","slug":"安全控制"},{"level":3,"title":"rbac","slug":"rbac"},{"level":2,"title":"yaml 配置","slug":"yaml-配置"},{"level":3,"title":"version","slug":"version"},{"level":3,"title":"kind","slug":"kind"},{"level":3,"title":"metadata","slug":"metadata"},{"level":3,"title":"spec","slug":"spec"},{"level":2,"title":"Helm","slug":"helm"},{"level":3,"title":"chart","slug":"chart"},{"level":3,"title":"release","slug":"release"},{"level":3,"title":"自定义 chart","slug":"自定义-chart"},{"level":3,"title":"Values","slug":"values"}],"relativePath":"cloud/k8s.md","lastUpdated":1627802606956}',t={},p=s('<h2 id="k8s"><a class="header-anchor" href="#k8s" aria-hidden="true">#</a> K8s</h2><ul><li>节点（Node）：一个节点是一个运行 Kubernetes 中的主机。</li><li>容器组（Pod）：一个 Pod 对应于由若干容器组成的一个容器组，同个组内的容器共享一个存储卷(volume)。</li><li>容器组生命周期（pos-states）：包含所有容器状态集合，包括容器组状态类型，容器组生命周期，事件，重启策略，以及 replication controllers。</li><li>Replication Controllers：主要负责指定数量的 pod 在同一时间一起运行 废弃</li><li>服务（services）：一个 Kubernetes 服务是容器组逻辑的高级抽象，同时也对外提供访问容器组的策略。</li><li>卷（volumes）：一个卷就是一个目录，容器对其有访问权限。</li><li>标签（labels）：标签是用来连接一组对象的，比如容器组。标签可以被用来组织和选择子对象。</li><li>接口权限（accessing_the_api）：端口，IP 地址和代理的防火墙规则。</li><li>web 界面（ux）：用户可以通过 web 界面操作 Kubernetes。</li><li>命令行操作（cli）：kubectl 命令。</li></ul><h3 id="kubeadm-引导集群"><a class="header-anchor" href="#kubeadm-引导集群" aria-hidden="true">#</a> kubeadm 引导集群</h3><blockquote><p>image registry: <code>registry.aliyuncs.com/google_containers</code></p></blockquote><blockquote><p>1master 2 node</p></blockquote><table><thead><tr><th>Node</th><th>role</th></tr></thead><tbody><tr><td>192.168.100.80</td><td>control-plane,master</td></tr><tr><td>192.168.100.81</td><td>worker</td></tr><tr><td>192.168.100.82</td><td>worker</td></tr></tbody></table><h3 id="初始化集群"><a class="header-anchor" href="#初始化集群" aria-hidden="true">#</a> 初始化集群</h3><ol><li>安装<code>kubeadm</code> <code>kubelet</code> <code>kubectl</code> , <code>kubelet</code>设为自启动</li><li><code>kubeadm</code> 初始化<code>control-plane</code> <code>etcd</code></li></ol><div class="language-bash"><pre><code>kubeadm config print init-defaults <span class="token operator">&gt;</span> k8s.yaml\n</code></pre></div><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeadm.k8s.io/v1beta2\n<span class="token key atrule">bootstrapTokens</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">groups</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> system<span class="token punctuation">:</span>bootstrappers<span class="token punctuation">:</span>kubeadm<span class="token punctuation">:</span>default<span class="token punctuation">-</span>node<span class="token punctuation">-</span>token\n    <span class="token key atrule">token</span><span class="token punctuation">:</span> abcdef.0123456789abcdef\n    <span class="token key atrule">ttl</span><span class="token punctuation">:</span> 24h0m0s\n    <span class="token key atrule">usages</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> signing\n      <span class="token punctuation">-</span> authentication\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> InitConfiguration\n<span class="token key atrule">localAPIEndpoint</span><span class="token punctuation">:</span>\n  <span class="token key atrule">advertiseAddress</span><span class="token punctuation">:</span> 192.168.100.80\n  <span class="token key atrule">bindPort</span><span class="token punctuation">:</span> <span class="token number">6443</span>\n<span class="token key atrule">nodeRegistration</span><span class="token punctuation">:</span>\n  <span class="token key atrule">criSocket</span><span class="token punctuation">:</span> /var/run/dockershim.sock\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> master\n  <span class="token key atrule">taints</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoSchedule\n      <span class="token key atrule">key</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>role.kubernetes.io/master\n<span class="token punctuation">---</span>\n<span class="token key atrule">apiServer</span><span class="token punctuation">:</span>\n  <span class="token key atrule">timeoutForControlPlane</span><span class="token punctuation">:</span> 4m0s\n<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeadm.k8s.io/v1beta2\n<span class="token key atrule">certificatesDir</span><span class="token punctuation">:</span> /etc/kubernetes/pki\n<span class="token key atrule">clusterName</span><span class="token punctuation">:</span> kubernetes\n<span class="token key atrule">controllerManager</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token key atrule">dns</span><span class="token punctuation">:</span>\n  <span class="token key atrule">type</span><span class="token punctuation">:</span> CoreDNS\n<span class="token key atrule">etcd</span><span class="token punctuation">:</span>\n  <span class="token key atrule">local</span><span class="token punctuation">:</span>\n    <span class="token key atrule">dataDir</span><span class="token punctuation">:</span> /var/lib/etcd\n<span class="token key atrule">imageRepository</span><span class="token punctuation">:</span> k8s.gcr.io\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterConfiguration\n<span class="token key atrule">kubernetesVersion</span><span class="token punctuation">:</span> v1.20.0\n<span class="token key atrule">networking</span><span class="token punctuation">:</span>\n  <span class="token key atrule">dnsDomain</span><span class="token punctuation">:</span> cluster.local\n  <span class="token key atrule">serviceSubnet</span><span class="token punctuation">:</span> 10.96.0.0/12\n  <span class="token key atrule">podSubnet</span><span class="token punctuation">:</span> 10.244.0.0/16\n<span class="token key atrule">scheduler</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><ol start="3"><li>下载必要的组件</li></ol><div class="language-bash"><pre><code>kubeadm config images list --config ./k8s.yaml\n\n\n<span class="token comment"># k8s.gcr.io/kube-apiserver:v1.20.0</span>\n<span class="token comment"># k8s.gcr.io/kube-controller-manager:v1.20.0</span>\n<span class="token comment"># k8s.gcr.io/kube-scheduler:v1.20.0</span>\n<span class="token comment"># k8s.gcr.io/kube-proxy:v1.20.0</span>\n<span class="token comment"># k8s.gcr.io/pause:3.2</span>\n<span class="token comment"># k8s.gcr.io/etcd:3.4.13-0</span>\n<span class="token comment"># k8s.gcr.io/coredns:1.7.0</span>\n\n\nkubeadm config images pull --config ./k8s.yaml\n</code></pre></div><ol start="4"><li>初始化<code>control-plane</code></li></ol><div class="language-bash"><pre><code>kubeadm init --config ./k8s.yaml\n\n<span class="token comment">#  其他节点最后加入</span>\n<span class="token function">sudo</span> kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.100.80:6443 --token abcdef.0123456789abcdef <span class="token punctuation">\\</span>\n    --discovery-token-ca-cert-hash sha256:8a8e18afb8aaa05d35305bd7d65e50542d5673032fcb0988089a298fe330cea3\n\n</code></pre></div><ol start="5"><li>环境变量</li></ol><div class="language-bash"><pre><code><span class="token comment"># 非 root 用户使 `kubectl` 命令   admin.conf从control-plane节点同步到其它worker节点</span>\n  <span class="token function">mkdir</span> -p <span class="token environment constant">$HOME</span>/.kube\n  <span class="token function">sudo</span> <span class="token function">cp</span> -i /etc/kubernetes/admin.conf <span class="token environment constant">$HOME</span>/.kube/config\n  <span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -u<span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -g<span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/.kube/config\n\n<span class="token comment"># root用户</span>\n\n  <span class="token builtin class-name">export</span> <span class="token assign-left variable">KUBECONFIG</span><span class="token operator">=</span>/etc/kubernetes/admin.conf\n\n</code></pre></div><ol start="6"><li>集群 pod 网关通信组件</li></ol><blockquote><p>第三方有多种实现</p></blockquote><p><a href="https://github.com/coreos/flannel" target="_blank" rel="noopener noreferrer">flannel</a></p><div class="language-bash"><pre><code><span class="token comment"># 集群主节点执行即可</span>\nkubectl apply -f flannel.yaml  <span class="token comment"># 镜像需要拉取</span>\n</code></pre></div><h3 id="dashboard"><a class="header-anchor" href="#dashboard" aria-hidden="true">#</a> dashboard</h3><p><a href="https://github.com/kubernetes/dashboard/" target="_blank" rel="noopener noreferrer">dashboard</a></p><div class="language-bash"><pre><code><span class="token comment"># port需要开放</span>\nkubectl edit services kubernetes-dashboard -n kubernetes-dashboard\n\n<span class="token comment"># type: NodePort</span>\n</code></pre></div><h3 id="高可用集群"><a class="header-anchor" href="#高可用集群" aria-hidden="true">#</a> 高可用集群</h3><p>上云吧</p><h2 id="kubectl"><a class="header-anchor" href="#kubectl" aria-hidden="true">#</a> kubectl</h2><p><code>kubectl create/apply -f xxx.yaml --record</code> create 与 apply : apply 更新 create 新建,已存在报错 record 记录每次变化</p><p><code>kubectl get pods -o wide -n xkube-system</code> : namespace</p><p><code>kubectl logs podName -c containerName -n kube-system</code>: 查看某个 pod 日志</p><p><code>kubectl describe pod xxxx -n kube-system</code>:查看 pod 详细信息</p><p><code>kubectl get/delete namespace/namespaces/ns/services/svc/deploy/secrets/pods -n xxxx -o yaml/wide</code> : services:svc deployment: deploy ns:namespace</p><p><code>kubectl scale deployment/deployName --replicas=3</code> : 伸缩</p><p><code>kubectl set image deployment/deployName xxx/vvv:latest</code>:更新 deploy 镜像</p><p><code>kubectl rollout undo deployment/deployName --to-revesion=2</code>:回滚到某次的状态 默认上一次</p><p><code>kubectl rollout status deployment/deployName</code>:查看回滚状态</p><p><code>kubectl rollout history deployment/deployName</code>:查看部署历史</p><p><code>kubectl explain spec.xx</code> : 查看 yaml 配置模板</p><p><code>kubectl exit pod/svc xxx</code>: 编辑资源 yaml, 修改某些字段可能无效</p><p><code>kubectl exec podName -c containerName -it -- /bin/bash</code> :进入 pod 容器内</p><p><code>kubectl label pod xxx k=v --override=true</code>: 修改某个资源的 label</p><p><code>kubectl expose deployment xxxx --port=80 --target-port=80</code></p><ul><li>svc 绑定端口 port/对外暴露端口 target-port/容器内端口 默认一致 node-port/外部可以访问的端口</li><li>默认 type: ClusterIP 集群内访问 NodePort:外部可以访问</li></ul><p><code>kubectl create configmap xxx --from-file=/xxxx</code> :configmap</p><p><code>kubectl get cm/confgmap</code></p><p><code>kubectl taint ndoes xxx k=v:effect</code>: 设置污点</p><h2 id="pod"><a class="header-anchor" href="#pod" aria-hidden="true">#</a> pod</h2><h3 id="生命周期"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><div class="language-bash"><pre><code>pause启动<span class="token punctuation">(</span>完成网络与volume初始化<span class="token punctuation">)</span>\ninit初始化<span class="token punctuation">(</span>依次,上一个成功才开始下一个<span class="token punctuation">)</span>  start<span class="token punctuation">(</span>postStart<span class="token punctuation">)</span>  run  stop<span class="token punctuation">(</span>preStop<span class="token punctuation">)</span>   readines:就绪检测 liveness: 存活检测\n\ninit初始化失败,会按照容器重启策略重启\n\n正在初始化的状态为pending\n\ninitContainers name不能重复\n</code></pre></div><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>pod\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> myapp\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>container\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox\n      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;sh&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;echo The app is running! &amp;&amp; sleep 3600&quot;</span><span class="token punctuation">]</span>\n  <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> init<span class="token punctuation">-</span>myservice\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox\n      <span class="token key atrule">command</span><span class="token punctuation">:</span>\n        <span class="token punctuation">[</span>\n          <span class="token string">&quot;sh&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;until nslookup myservice; do echo waiting for myservice; sleep 2; done;&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> init<span class="token punctuation">-</span>mydb\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox\n      <span class="token key atrule">command</span><span class="token punctuation">:</span>\n        <span class="token punctuation">[</span>\n          <span class="token string">&quot;sh&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;until nslookup mydb; do echo waiting for mydb; sleep 2; done;&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n</code></pre></div><h3 id="状态检测"><a class="header-anchor" href="#状态检测" aria-hidden="true">#</a> 状态检测</h3><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">test</span><span class="token punctuation">:</span> readiness\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> readiness<span class="token punctuation">-</span>http\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> readiness<span class="token punctuation">-</span>http\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx\n      <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http\n          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>\n      <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>\n        <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>\n          <span class="token key atrule">path</span><span class="token punctuation">:</span> /health\n          <span class="token key atrule">port</span><span class="token punctuation">:</span> http\n          <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP\n</code></pre></div><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">test</span><span class="token punctuation">:</span> liveness\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>http\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>http\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx\n      <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http\n          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>\n      <span class="token key atrule">lifecycle</span><span class="token punctuation">:</span>\n        <span class="token key atrule">postStart</span><span class="token punctuation">:</span>\n          <span class="token key atrule">exec</span><span class="token punctuation">:</span>\n            <span class="token key atrule">command</span><span class="token punctuation">:</span>\n              <span class="token punctuation">[</span>\n                <span class="token string">&quot;/bin/sh&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;echo liveness-http test &gt; /usr/share/nginx/html/health&quot;</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span>\n      <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>\n        <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>\n          <span class="token key atrule">path</span><span class="token punctuation">:</span> /health\n          <span class="token key atrule">port</span><span class="token punctuation">:</span> http\n          <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP\n</code></pre></div><h3 id="类型"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h3><p><code>自主pod</code>:退出了就拉倒 <code>控制器管理的pod</code>:按控制器策略创建</p><h2 id="服务发现"><a class="header-anchor" href="#服务发现" aria-hidden="true">#</a> 服务发现</h2><p>pod 资源的抽象 label-selector 对 pod 逻辑分组</p><h3 id="port"><a class="header-anchor" href="#port" aria-hidden="true">#</a> port</h3><ul><li>ClusterPort 集群内</li><li>NodePort 每个 node 节点都绑定端口对外服务</li><li>LoadBalancer</li><li>ExternalName 集群外部服务引入到集群内部来</li></ul><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">selector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> MyApp\n  <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP\n      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>\n      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9376</span>\n</code></pre></div><h3 id="headless-service"><a class="header-anchor" href="#headless-service" aria-hidden="true">#</a> headless service</h3><p>有状态服务使用</p><h3 id="externalname"><a class="header-anchor" href="#externalname" aria-hidden="true">#</a> ExternalName</h3><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service\n  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> prod\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">type</span><span class="token punctuation">:</span> ExternalName\n  <span class="token key atrule">externalName</span><span class="token punctuation">:</span> my.database.example.com\n</code></pre></div><h3 id="ingress-负载均衡器"><a class="header-anchor" href="#ingress-负载均衡器" aria-hidden="true">#</a> ingress 负载均衡器</h3><p><a href="https://github.com/kubernetes/ingress-nginx" target="_blank" rel="noopener noreferrer">nginx-ingress</a></p><h2 id="存储"><a class="header-anchor" href="#存储" aria-hidden="true">#</a> 存储</h2><h3 id="config-map"><a class="header-anchor" href="#config-map" aria-hidden="true">#</a> config map</h3><p>k:文件名 v:文件内容</p><div class="language-"><pre><code>kubectl create configmap xxx --from-file=/xxxx --from-liberal=kk=vv\n</code></pre></div><h3 id="secret"><a class="header-anchor" href="#secret" aria-hidden="true">#</a> secret</h3><ul><li>service account: 访问 k8s api, 默认挂载到 pod 的<code>/run/secrets/kubernets.io/serviceaccount/</code>中</li><li>opaque: base64 编码</li><li>docker config json: 用于 registry 认证</li></ul><h3 id="volume"><a class="header-anchor" href="#volume" aria-hidden="true">#</a> volume</h3><ul><li>emptyDir :暂存,删光 pod 就没了</li><li>hostPath: 挂载主机目录</li></ul><h3 id="pv-pvc"><a class="header-anchor" href="#pv-pvc" aria-hidden="true">#</a> pv/pvc</h3><ul><li>回收策略</li><li>读写策略</li></ul><p>statefulset/deployment—&gt;pvc 模板----&gt;选择符合条件的 pv</p><h2 id="工作负载"><a class="header-anchor" href="#工作负载" aria-hidden="true">#</a> 工作负载</h2><h3 id="replication-controllers"><a class="header-anchor" href="#replication-controllers" aria-hidden="true">#</a> Replication Controllers</h3><p>废弃</p><h3 id="replica-sets"><a class="header-anchor" href="#replica-sets" aria-hidden="true">#</a> Replica Sets</h3><p>支持 selector, 管理 pods 的创建调度</p><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> ReplicaSet\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> frontend\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> guestbook\n    <span class="token key atrule">tier</span><span class="token punctuation">:</span> frontend\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token comment"># modify replicas according to your case</span>\n  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>\n  <span class="token key atrule">selector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>\n      <span class="token key atrule">tier</span><span class="token punctuation">:</span> frontend\n  <span class="token key atrule">template</span><span class="token punctuation">:</span>\n    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n      <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n        <span class="token key atrule">tier</span><span class="token punctuation">:</span> frontend\n    <span class="token key atrule">spec</span><span class="token punctuation">:</span>\n      <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>redis\n          <span class="token key atrule">image</span><span class="token punctuation">:</span> gcr.io/google_samples/gb<span class="token punctuation">-</span>frontend<span class="token punctuation">:</span>v3\n</code></pre></div><h3 id="deployment"><a class="header-anchor" href="#deployment" aria-hidden="true">#</a> Deployment</h3><p>通过 replica sets 管理 pods, 回滚 更新等等</p><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>\n  <span class="token key atrule">selector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>\n      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx\n  <span class="token key atrule">template</span><span class="token punctuation">:</span>\n    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n      <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">spec</span><span class="token punctuation">:</span>\n      <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx\n          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2\n          <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>\n</code></pre></div><h3 id="daemon-sets"><a class="header-anchor" href="#daemon-sets" aria-hidden="true">#</a> Daemon Sets</h3><p>所有 node 或某些 node 节点都运行某一个 pod</p><h3 id="stateful-sets"><a class="header-anchor" href="#stateful-sets" aria-hidden="true">#</a> Stateful Sets</h3><p>有状态服务,podname hostname 重新调度后不会改变 有序部署 伸缩</p><h3 id="cron-jobs"><a class="header-anchor" href="#cron-jobs" aria-hidden="true">#</a> Cron Jobs</h3><p>定时任务</p><h3 id="jobs"><a class="header-anchor" href="#jobs" aria-hidden="true">#</a> Jobs</h3><p>批处理任务,执行失败的可以重新执行</p><h3 id="hpa"><a class="header-anchor" href="#hpa" aria-hidden="true">#</a> hpa</h3><p>自动伸缩</p><h2 id="调度器"><a class="header-anchor" href="#调度器" aria-hidden="true">#</a> 调度器</h2><p><code>Scheduler</code>: 分配 pod 到合适的节点</p><h3 id="调度过程"><a class="header-anchor" href="#调度过程" aria-hidden="true">#</a> 调度过程</h3><ol><li>预选,排除不符合的节点</li><li>符合条件的节点排序</li></ol><h3 id="affinity"><a class="header-anchor" href="#affinity" aria-hidden="true">#</a> affinity</h3><p><code>节点亲和性/pod亲和性</code> 标签匹配</p><p>node hostname 标签 : <code>kubernetes.io/hostname</code></p><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">affinity</span><span class="token punctuation">:</span>\n    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>\n      <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>\n        <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>\n          <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>\n              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/e2e<span class="token punctuation">-</span>az<span class="token punctuation">-</span>name\n                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In\n                <span class="token key atrule">values</span><span class="token punctuation">:</span>\n                  <span class="token punctuation">-</span> e2e<span class="token punctuation">-</span>az1\n                  <span class="token punctuation">-</span> e2e<span class="token punctuation">-</span>az2\n      <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>\n          <span class="token key atrule">preference</span><span class="token punctuation">:</span>\n            <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>\n              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> another<span class="token punctuation">-</span>node<span class="token punctuation">-</span>label<span class="token punctuation">-</span>key\n                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In\n                <span class="token key atrule">values</span><span class="token punctuation">:</span>\n                  <span class="token punctuation">-</span> another<span class="token punctuation">-</span>node<span class="token punctuation">-</span>label<span class="token punctuation">-</span>value\n  <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity\n      <span class="token key atrule">image</span><span class="token punctuation">:</span> k8s.gcr.io/pause<span class="token punctuation">:</span><span class="token number">2.0</span>\n</code></pre></div><h3 id="taint-toleration"><a class="header-anchor" href="#taint-toleration" aria-hidden="true">#</a> taint/toleration</h3><p><code>污点/容忍</code></p><p>k=v(可以为空):effect(noschedule prefernoschedule noExecute)</p><p><code>kubectl taint ndoes xxx k=v:effect</code></p><div class="language-yaml"><pre><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;xxx&quot;</span>\n    <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Equal&quot;</span>\n    <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;xxxx&quot;</span>\n    <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoSchedule&quot;</span>\n    <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> <span class="token number">7200</span>\n</code></pre></div><h3 id="指定节点"><a class="header-anchor" href="#指定节点" aria-hidden="true">#</a> 指定节点</h3><div class="language-yaml"><pre><code><span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> <span class="token string">&quot;xxx&quot;</span>\n<span class="token punctuation">---</span>\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">key</span><span class="token punctuation">:</span> value <span class="token comment"># label</span>\n</code></pre></div><h3 id="安全控制"><a class="header-anchor" href="#安全控制" aria-hidden="true">#</a> 安全控制</h3><ol><li>authentication</li><li>authorization</li><li>admission control</li></ol><h3 id="rbac"><a class="header-anchor" href="#rbac" aria-hidden="true">#</a> rbac</h3><ul><li>Role</li><li>ClusterRole</li><li>RoleBinding</li><li>ClusterRoleBinding</li></ul><h2 id="yaml-配置"><a class="header-anchor" href="#yaml-配置" aria-hidden="true">#</a> yaml 配置</h2><h3 id="version"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><p><code>必须有</code> <code>apps/v1</code> <code>kubectl api-versions</code></p><h3 id="kind"><a class="header-anchor" href="#kind" aria-hidden="true">#</a> kind</h3><p>资源类型: <code>Pod</code> <code>Deployment</code>等</p><h3 id="metadata"><a class="header-anchor" href="#metadata" aria-hidden="true">#</a> metadata</h3><ul><li>name</li><li>namespace 默认 default</li><li>labels</li></ul><h3 id="spec"><a class="header-anchor" href="#spec" aria-hidden="true">#</a> spec</h3><p>资源详细信息</p><ul><li><p>initContainers: init 容器,依次启动</p></li><li><p>containers : 容器集合</p><ul><li>name</li><li>image</li><li>imagePullPolicy:always never ifnotpresent</li><li>command: 容器启动命令</li><li>args</li><li>workingDir</li><li>volumeMounts: 存储卷, name path 等等</li><li>ports: 端口集合 <ul><li>name: 端口名称</li><li>containerPort: 容器监听端口</li><li>hostPort: 主机监听端口,默认与 containerPort 一致</li><li>protocol: tcp/udp</li></ul></li><li>env: 环境变量</li><li>resources: 资源限制</li></ul></li><li><p>restartPolicy: pod 重启策略 always onfailure never</p></li><li><p>nodeSelector: k/v 标签, node 过滤标签</p></li><li><p>imagePullSecrets: pull image 时的 secret</p></li><li><p>hostNetwork: 是否使用宿主机网络 默认 false</p></li></ul><h2 id="helm"><a class="header-anchor" href="#helm" aria-hidden="true">#</a> Helm</h2><blockquote><p>包管理工具, heml3 移除了 tiller</p></blockquote><h3 id="chart"><a class="header-anchor" href="#chart" aria-hidden="true">#</a> chart</h3><p>应用信息集合,各种配置</p><h3 id="release"><a class="header-anchor" href="#release" aria-hidden="true">#</a> release</h3><p>chart 的实例</p><h3 id="自定义-chart"><a class="header-anchor" href="#自定义-chart" aria-hidden="true">#</a> 自定义 chart</h3><ol><li><code>Chart.yaml</code></li></ol><div class="language-yaml"><pre><code><span class="token comment"># name version必须有</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> xxxx\n<span class="token key atrule">version</span><span class="token punctuation">:</span> 1.0.0\n</code></pre></div><ol start="2"><li>创建 k8s yaml 文件</li></ol><p><code>./templates/deployment.yaml</code></p><div class="language-yaml"><pre><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment\n<span class="token comment">#  ...</span>\n</code></pre></div><p><code>./templates/service.yaml</code></p><div class="language-yaml"><pre><code><span class="token comment"># service yaml配置</span>\n</code></pre></div><ol start="3"><li>启动</li></ol><div class="language-bash"><pre><code>helm create xxx  <span class="token comment"># 创建chart目录和chart用到的公共文件目录结构</span>\n\nhelm lint xxx   <span class="token comment"># 检查配置</span>\n\nhelm <span class="token function">install</span> --set <span class="token assign-left variable">name</span><span class="token operator">=</span>xxx <span class="token builtin class-name">.</span>\n\nhelm <span class="token function">install</span> -n xxx -namespace vvv <span class="token builtin class-name">.</span>\n\nhelm list\n\nhelm upgrade xxxx\n</code></pre></div><h3 id="values"><a class="header-anchor" href="#values" aria-hidden="true">#</a> Values</h3><p><code>valuse.yaml</code> 定义变量信息</p><div class="language-yaml"><pre><code><span class="token key atrule">xxx</span><span class="token punctuation">:</span> test\n</code></pre></div><p><code>k8s.yaml</code> 中引用:</p><div class="language-yaml"><pre><code><span class="token key atrule">xx</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> .Values.xxx <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre></div>',145);t.render=function(s,e,t,o,l,c){return n(),a("div",null,[p])};export default t;export{e as __pageData};
