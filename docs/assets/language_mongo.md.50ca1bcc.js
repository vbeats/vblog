import{o as n,c as s,d as a}from"./app.9f9f1749.js";const t='{"title":"mongo 基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"mongo 基础","slug":"mongo-基础"}],"relativePath":"language/mongo.md","lastUpdated":1627802607024}',p={},o=a('<h2 id="mongo-基础"><a class="header-anchor" href="#mongo-基础" aria-hidden="true">#</a> mongo 基础</h2><p><code>aggregate</code>: 聚合</p><div class="language-bash"><pre><code>db.doc.aggregate<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token comment"># pipline 管道处理</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$project</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>name:1,age:1<span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>,\n    <span class="token punctuation">{</span>\n        <span class="token variable">$match</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span>:<span class="token punctuation">{</span><span class="token variable">$gte</span>:20<span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><p><code>$project</code>: 字段映射 过滤</p><p><code>$match</code>: 匹配</p><p><code>$group</code>: 分组 <code>$group: {_id:&quot;$order_id&quot;, total: {$sum: &quot;$price&quot;}}</code></p><p><code>$sort</code>: 排序</p><p><code>$limit</code> <code>$skip</code> :分页</p><p><code>$lookup</code>: 多表查询</p><div class="language-bash"><pre><code><span class="token punctuation">{</span>\n   <span class="token variable">$lookup</span><span class="token builtin class-name">:</span>\n     <span class="token punctuation">{</span>\n       from: <span class="token operator">&lt;</span>collection to join<span class="token operator">&gt;</span>,\n       localField: <span class="token operator">&lt;</span>field from the input documents<span class="token operator">&gt;</span>,\n       foreignField: <span class="token operator">&lt;</span>field from the documents of the <span class="token string">&quot;from&quot;</span> collection<span class="token operator">&gt;</span>,\n       as: <span class="token operator">&lt;</span>output array field<span class="token operator">&gt;</span>\n     <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># ----------------</span>\n<span class="token variable">$lookup</span>:<span class="token punctuation">{</span>\n    from: <span class="token string">&quot;xxx&quot;</span>, <span class="token comment"># 要关联的表</span>\n    localField: <span class="token string">&quot;id&quot;</span>, <span class="token comment"># 关联字段</span>\n    foreignField: <span class="token string">&quot;user_id&quot;</span>,\n    as: <span class="token string">&quot;users&quot;</span> <span class="token comment"># 关联表别名</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># ----------------------</span>\n<span class="token punctuation">{</span>\n   <span class="token variable">$lookup</span><span class="token builtin class-name">:</span>\n      <span class="token punctuation">{</span>\n         from: <span class="token operator">&lt;</span>foreign collection<span class="token operator">&gt;</span>,\n         localField: <span class="token operator">&lt;</span>field from <span class="token builtin class-name">local</span> collection<span class="token string">&#39;s documents&gt;,\n         foreignField: &lt;field from foreign collection&#39;</span>s documents<span class="token operator">&gt;</span>,\n         let: <span class="token punctuation">{</span> <span class="token operator">&lt;</span>var_<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>: <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span>, …, <span class="token operator">&lt;</span>var_n<span class="token operator">&gt;</span>: <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span> <span class="token punctuation">}</span>,\n         pipeline: <span class="token punctuation">[</span> <span class="token operator">&lt;</span>pipeline to run<span class="token operator">&gt;</span> <span class="token punctuation">]</span>,\n         as: <span class="token operator">&lt;</span>output array field<span class="token operator">&gt;</span>\n      <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># --------------------------------</span>\nSELECT *, stockdata\nFROM orders\nWHERE stockdata IN <span class="token punctuation">(</span>\n   SELECT warehouse, instock\n   FROM warehouses\n   WHERE stock_item <span class="token operator">=</span> orders.item\n   AND instock <span class="token operator">&gt;=</span> orders.ordered\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ndb.orders.aggregate<span class="token punctuation">(</span><span class="token punctuation">[</span>\n   <span class="token punctuation">{</span>\n      <span class="token variable">$lookup</span><span class="token builtin class-name">:</span>\n         <span class="token punctuation">{</span>\n           from: <span class="token string">&quot;warehouses&quot;</span>,\n           <span class="token comment"># 变量 : 表达式(当前表字段)</span>\n           let: <span class="token punctuation">{</span> order_item: <span class="token string">&quot;<span class="token variable">$item</span>&quot;</span>, order_qty: <span class="token string">&quot;<span class="token variable">$ordered</span>&quot;</span> <span class="token punctuation">}</span>,\n           pipeline: <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span> <span class="token variable">$match</span><span class="token builtin class-name">:</span>\n                 <span class="token punctuation">{</span> <span class="token variable">$expr</span><span class="token builtin class-name">:</span>\n                    <span class="token punctuation">{</span> <span class="token variable">$and</span><span class="token builtin class-name">:</span>\n                       <span class="token punctuation">[</span><span class="token comment"># 关联表字段, $$let 变量</span>\n                         <span class="token punctuation">{</span> <span class="token variable">$eq</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$stock_item</span>&quot;</span>,  <span class="token string">&quot;<span class="token variable">$$</span>order_item&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>,\n                         <span class="token punctuation">{</span> <span class="token variable">$gte</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$instock</span>&quot;</span>, <span class="token string">&quot;<span class="token variable">$$</span>order_qty&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>\n                       <span class="token punctuation">]</span>\n                    <span class="token punctuation">}</span>\n                 <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>,\n              <span class="token punctuation">{</span> <span class="token variable">$project</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span> stock_item: <span class="token number">0</span>, _id: <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n           <span class="token punctuation">]</span>,\n           as: <span class="token string">&quot;stockdata&quot;</span>\n         <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div>',10);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
