import{o as n,c as s,d as a}from"./app.8862131a.js";const e='{"title":"Nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"Orange","slug":"orange"},{"level":3,"title":"配置","slug":"配置"},{"level":3,"title":"跨域:","slug":"跨域"},{"level":3,"title":"静态资源配置:","slug":"静态资源配置"},{"level":3,"title":"反向代理 IP 转发配置:","slug":"反向代理-ip-转发配置"},{"level":3,"title":"basic auth","slug":"basic-auth"},{"level":3,"title":"日志分割","slug":"日志分割"}],"relativePath":"other/nginx.md","lastUpdated":1628064725588}',t={},o=a('<h1 id="nginx"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h1><p><a href="https://www.nginx.cn/doc/" target="_blank" rel="noopener noreferrer">文档</a></p><h2 id="orange"><a class="header-anchor" href="#orange" aria-hidden="true">#</a> Orange</h2><p><a href="https://github.com/orlabs/orange" target="_blank" rel="noopener noreferrer">文档</a></p><h3 id="配置"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-nginx"><pre><code><span class="token directive"><span class="token keyword">worker_processes</span> auto</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">user</span> root</span><span class="token punctuation">;</span>\n\n<span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">worker_connections</span>  <span class="token number">4096</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># optional: path of orange.conf</span>\n<span class="token directive"><span class="token keyword">env</span> ORANGE_CONF</span><span class="token punctuation">;</span>\n\n<span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">resolver</span> 114.114.114.114</span><span class="token punctuation">;</span> <span class="token comment"># replace it with your favorite config</span>\n    <span class="token directive"><span class="token keyword">charset</span> UTF-8</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">include</span> ./mime.types</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">log_format</span>  main <span class="token string">&#39;<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> &quot;<span class="token variable">$request</span>&quot; &#39;</span>\n    <span class="token string">&#39;<span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> &quot;<span class="token variable">$http_referer</span>&quot; &#39;</span>\n    <span class="token string">&#39;&quot;<span class="token variable">$http_user_agent</span>&quot; &quot;<span class="token variable">$request_time</span>&quot; &quot;<span class="token variable">$ssl_protocol</span>&quot; &quot;<span class="token variable">$ssl_cipher</span>&quot; &quot;<span class="token variable">$http_x_forwarded_for</span>&quot;&#39;</span>\n    <span class="token string">&#39;&quot;<span class="token variable">$upstream_addr</span>&quot; &quot;<span class="token variable">$upstream_status</span>&quot; &quot;<span class="token variable">$upstream_response_length</span>&quot; &quot;<span class="token variable">$upstream_response_time</span>&quot;&#39;</span></span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">access_log</span>  ./logs/access.log  main</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">error_log</span> ./logs/error.log error</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">sendfile</span>        <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">keepalive_timeout</span>  <span class="token number">65</span></span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">upstream</span> default_upstream</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">server</span> localhost:8001</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">#</span>\n    <span class="token comment"># Config client_body_buffer_size equal client_max_body_size for enforcing in-memory buffering of the whole request body</span>\n    <span class="token comment"># ref: https://github.com/openresty/lua-nginx-module/issues/521</span>\n    <span class="token comment">#</span>\n    <span class="token comment"># official instruct docs http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size</span>\n    <span class="token comment">#</span>\n    <span class="token directive"><span class="token keyword">client_body_buffer_size</span> <span class="token number">1m</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">1m</span></span><span class="token punctuation">;</span>\n\n    <span class="token comment">#----------------------------Orange configuration-----------------------------</span>\n    <span class="token directive"><span class="token keyword">lua_package_path</span>  <span class="token string">&quot;<span class="token variable">$prefix</span>/deps/share/lua/5.1/?.lua;<span class="token variable">$prefix</span>/deps/share/lua/5.1/orange/?.lua;<span class="token variable">$prefix</span>/?.lua;/usr/share/lua/5.1/?.lua;/usr/local/lor/?.lua;;&quot;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">lua_package_cpath</span> <span class="token string">&quot;<span class="token variable">$prefix</span>/deps/lib64/lua/5.1/?.so;<span class="token variable">$prefix</span>/deps/lib/lua/5.1/?.so;/usr/lib64/lua/5.1/?.so;;&quot;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">lua_code_cache</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> orange_data <span class="token number">20m</span></span><span class="token punctuation">;</span> <span class="token comment"># should not removed. used for orange data, e.g. plugins configurations..</span>\n\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> status <span class="token number">1m</span></span><span class="token punctuation">;</span> <span class="token comment"># used for global statistic, see plugin: stat</span>\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> waf_status <span class="token number">1m</span></span><span class="token punctuation">;</span> <span class="token comment"># used for waf statistic, see plugin: waf</span>\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> monitor <span class="token number">10m</span></span><span class="token punctuation">;</span> <span class="token comment"># used for url monitor statistic, see plugin: monitor</span>\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> rate_limit <span class="token number">10m</span></span><span class="token punctuation">;</span> <span class="token comment"># used for rate limiting count, see plugin: rate_limiting</span>\n    <span class="token directive"><span class="token keyword">lua_shared_dict</span> property_rate_limiting <span class="token number">10m</span></span><span class="token punctuation">;</span> <span class="token comment"># used for rate limiting count, see plugin: rate_limiting</span>\n\n\n\n    <span class="token directive"><span class="token keyword">init_by_lua_block</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">local</span> orange = require(<span class="token string">&quot;orange.orange&quot;</span>)\n        local env_orange_conf = os.getenv(<span class="token string">&quot;ORANGE_CONF&quot;</span>)\n        print(string.char(27) .. <span class="token string">&quot;[34m&quot;</span> .. <span class="token string">&quot;[INFO]&quot;</span> .. string.char(27).. <span class="token string">&quot;[0m&quot;</span>, [[the env[ORANGE_CONF] is ]], env_orange_conf)\n\n        -- Here, you can also use the absolute path, eg: local confige_file = <span class="token string">&quot;/home/openresty/orange/conf/orange.conf&quot;</span>\n        local config_file = env_orange_conf or ngx.config.prefix().. <span class="token string">&quot;/conf/orange.conf&quot;</span>\n        local config, store = orange.init(</span><span class="token punctuation">{</span>\n            config = config_file\n        <span class="token punctuation">}</span>)\n\n        -- <span class="token directive"><span class="token keyword">the</span> orange context\n        context =</span> <span class="token punctuation">{</span>\n            orange = orange,\n            store = store,\n            config = config\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token directive"><span class="token keyword">init_worker_by_lua_block</span></span> <span class="token punctuation">{</span>\n        local orange = context.orange\n        orange.init_worker()\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># main server</span>\n    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span>\n        <span class="token comment">#server_name  my_domain.com;</span>\n\n        <span class="token directive"><span class="token keyword">location</span> = /favicon.ico</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">log_not_found</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$upstream_host</span> <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$upstream_url</span> <span class="token string">&#39;http://default_upstream&#39;</span></span><span class="token punctuation">;</span>\n\n            <span class="token directive"><span class="token keyword">rewrite_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local orange = context.orange\n                orange.redirect()\n                orange.rewrite()\n            <span class="token punctuation">}</span>\n\n            <span class="token directive"><span class="token keyword">access_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local orange = context.orange\n                orange.init_cookies()\n                orange.access()\n            <span class="token punctuation">}</span>\n\n            <span class="token comment"># proxy</span>\n            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Scheme <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$upstream_host</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_pass</span> <span class="token variable">$upstream_url</span></span><span class="token punctuation">;</span>\n\n\n            <span class="token directive"><span class="token keyword">header_filter_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local orange = context.orange\n                orange.header_filter()\n            <span class="token punctuation">}</span>\n\n            <span class="token directive"><span class="token keyword">body_filter_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local orange = context.orange\n                orange.body_filter()\n            <span class="token punctuation">}</span>\n\n            <span class="token directive"><span class="token keyword">log_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local orange = context.orange\n                orange.log()\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /robots.txt</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">return</span> <span class="token number">200</span> <span class="token string">&#39;User-agent: *<span class="token escape entity">\\n</span>Disallow: /&#39;</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># default upstream server</span>\n    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">listen</span> <span class="token number">8001</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">server_name</span> localhost 127.0.0.1</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">access_log</span> ./logs/default_upstream_access.log main</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">error_log</span> ./logs/default_upstream_error.log</span><span class="token punctuation">;</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">content_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local json = require &quot;cjson&quot;\n                ngx.status = 200\n                ngx.say(&quot;Host: &quot;..ngx.var.host .. &quot;  URI: &quot; .. ngx.var.uri)\n                ngx.say(&#39;[Query Params]&#39;, json.encode(ngx.req.get_uri_args()))\n                ngx.req.read_body()\n                ngx.say(&#39;[Post Params]&#39;, json.encode(ngx.req.get_post_args()))\n                ngx.say(&#39;[Header Params]&#39;, json.encode(ngx.req.get_headers()))\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment"># orange dashboard server</span>\n    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">9999</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">stub_status</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n        <span class="token comment">#server_name  localhost;</span>\n        <span class="token directive"><span class="token keyword">access_log</span> ./logs/dashboard_access.log main</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">error_log</span> ./logs/dashboard_error.log info</span><span class="token punctuation">;</span>\n\n        <span class="token directive"><span class="token keyword">location</span> = /favicon.ico</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">log_not_found</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /robots.txt</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">return</span> <span class="token number">200</span> <span class="token string">&#39;User-agent: *<span class="token escape entity">\\n</span>Disallow: /&#39;</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment"># dashboard的静态文件</span>\n        <span class="token directive"><span class="token keyword">location</span> ~* /static/(.*)</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">alias</span> ./dashboard/static/<span class="token variable">$1</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">set</span> <span class="token variable">$template_root</span> <span class="token string">&#39;&#39;</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">content_by_lua_block</span></span> <span class="token punctuation">{</span>\n                context.views_path = ngx.config.prefix() .. &quot;/dashboard/views&quot;\n                local main = require(&quot;dashboard.main&quot;)\n                main:run()\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># api server</span>\n    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">7777</span></span><span class="token punctuation">;</span>\n        <span class="token comment">#server_name  localhost;</span>\n        <span class="token directive"><span class="token keyword">access_log</span> ./logs/api_access.log main</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">error_log</span> ./logs/api_error.log info</span><span class="token punctuation">;</span>\n\n        <span class="token directive"><span class="token keyword">location</span> = /favicon.ico</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">log_not_found</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /robots.txt</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">return</span> <span class="token number">200</span> <span class="token string">&#39;User-agent: *<span class="token escape entity">\\n</span>Disallow: /&#39;</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">content_by_lua_block</span></span> <span class="token punctuation">{</span>\n                local main = require(&quot;api.main&quot;)\n                main:run()\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="跨域"><a class="header-anchor" href="#跨域" aria-hidden="true">#</a> 跨域:</h3><div class="language-nginx"><pre><code> <span class="token directive"><span class="token keyword">location</span> /test/</span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">add_header</span> <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> <span class="token string">&#39;*&#39;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">add_header</span> <span class="token string">&#39;Access-Control-Allow-Credentials&#39;</span> <span class="token string">&#39;true&#39;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8080/test/</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="静态资源配置"><a class="header-anchor" href="#静态资源配置" aria-hidden="true">#</a> 静态资源配置:</h3><div class="language-nginx"><pre><code><span class="token directive"><span class="token keyword">location</span> ~ \\.(jpeg|png|gif)</span><span class="token punctuation">{</span>\n            <span class="token directive"><span class="token keyword">root</span> /home/feiyanImage</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="反向代理-ip-转发配置"><a class="header-anchor" href="#反向代理-ip-转发配置" aria-hidden="true">#</a> 反向代理 IP 转发配置:</h3><div class="language-nginx"><pre><code>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> REMOTE-HOST <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="basic-auth"><a class="header-anchor" href="#basic-auth" aria-hidden="true">#</a> basic auth</h3><p><code>apache2-utils</code></p><div class="language-bash"><pre><code>htpasswd -c -d /etc/nginx/pass_file  xxxxxx\n\n\nserver <span class="token punctuation">{</span>\n    auth_basic <span class="token string">&quot;请输入密码&quot;</span><span class="token punctuation">;</span>\n    auth_basic_user_file /etc/nginx/pass_file<span class="token punctuation">;</span> <span class="token comment"># 存放密码文件的路径</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="日志分割"><a class="header-anchor" href="#日志分割" aria-hidden="true">#</a> 日志分割</h3><div class="language-nginx"><pre><code>  <span class="token comment"># 不知道好不好用</span>\n    <span class="token directive"><span class="token keyword">map</span> <span class="token variable">$time_iso8601</span> <span class="token variable">$logdate</span></span> <span class="token punctuation">{</span>\n \t\t\t &#39;~^(?&lt;ymd&gt;\\d<span class="token punctuation">{</span>4<span class="token punctuation">}</span>-\\d<span class="token punctuation">{</span>2<span class="token punctuation">}</span>)&#39; $ymd<span class="token punctuation">;</span>\n\n \t\t\t<span class="token comment"># 也可以按照天进行分割</span>\n \t\t\t<span class="token comment">#&#39;~^(?&lt;ymd&gt;\\d{4}-\\d{2}-\\d{2})&#39; $ymd;</span>\n  \t\tdefault  date-not-found&#39;<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n    <span class="token directive"><span class="token keyword">access_log</span>  logs/access-<span class="token variable">$logdate</span>.log main</span><span class="token punctuation">;</span>\n</code></pre></div>',17);t.render=function(a,e,t,p,c,l){return n(),s("div",null,[o])};export default t;export{e as __pageData};
