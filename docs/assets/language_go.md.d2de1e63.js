import{o as a,c as n,d as e}from"./app.24e8ac78.js";const t='{"title":"GoLang 🦔","description":"","frontmatter":{},"headers":[{"level":2,"title":"time","slug":"time"},{"level":2,"title":"IO","slug":"io"},{"level":2,"title":"Goroutine","slug":"goroutine"},{"level":2,"title":"Channel","slug":"channel"},{"level":2,"title":"grpc","slug":"grpc"},{"level":2,"title":"go kit","slug":"go-kit"},{"level":3,"title":"Transport","slug":"transport"},{"level":3,"title":"Endpoint","slug":"endpoint"},{"level":3,"title":"Service","slug":"service"},{"level":3,"title":"mux","slug":"mux"},{"level":2,"title":"go-micro","slug":"go-micro"}],"relativePath":"language/go.md","lastUpdated":1634628931689}',o={},s=e('<h1 id="golang-🦔"><a class="header-anchor" href="#golang-🦔" aria-hidden="true">#</a> GoLang 🦔</h1><h2 id="time"><a class="header-anchor" href="#time" aria-hidden="true">#</a> time</h2><blockquote><p>2006-01-02 15:04:05</p></blockquote><h2 id="io"><a class="header-anchor" href="#io" aria-hidden="true">#</a> IO</h2><div class="language-go"><pre><code>os filepath path buferio ioutil\nReader Writer\n</code></pre></div><h2 id="goroutine"><a class="header-anchor" href="#goroutine" aria-hidden="true">#</a> Goroutine</h2><blockquote><p>go test()</p></blockquote><p><code>runtime sync</code></p><p>互斥锁 读写锁 waitgroup</p><h2 id="channel"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> Channel</h2><blockquote><p>var xx chan int , xx=make(chan int)</p></blockquote><blockquote><p>xx &lt;- data , data,ok := &lt;- xx</p></blockquote><p>发送方可以关闭通道 close(xx)</p><div class="language-go"><pre><code><span class="token keyword">for</span> n<span class="token operator">:=</span> <span class="token keyword">range</span> cc<span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="grpc"><a class="header-anchor" href="#grpc" aria-hidden="true">#</a> grpc</h2><blockquote><p>protoc -I proto/ protp/helloworld.proto --go_out=plugins=grpc:proto</p></blockquote><p>你猜这是什么意思</p><h2 id="go-kit"><a class="header-anchor" href="#go-kit" aria-hidden="true">#</a> go kit</h2><h3 id="transport"><a class="header-anchor" href="#transport" aria-hidden="true">#</a> Transport</h3><p>通信模块 支持<code>http</code> <code>grpc</code> <code>rpc</code> <code>thrift</code></p><p><code>Encode/Decode</code></p><h3 id="endpoint"><a class="header-anchor" href="#endpoint" aria-hidden="true">#</a> Endpoint</h3><p>处理相关的请求/响应</p><p><code>type Endpoint func(ctx context.Context, request interface{}) (response interface{}, err error)</code></p><h3 id="service"><a class="header-anchor" href="#service" aria-hidden="true">#</a> Service</h3><p>业务接口 实现</p><h3 id="mux"><a class="header-anchor" href="#mux" aria-hidden="true">#</a> mux</h3><p>路由组件 <a href="https://github.com/gorilla/mux" target="_blank" rel="noopener noreferrer">文档</a></p><div class="language-go"><pre><code>r <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">NewRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> HomeHandler<span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/products&quot;</span><span class="token punctuation">,</span> ProductsHandler<span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/articles&quot;</span><span class="token punctuation">,</span> ArticlesHandler<span class="token punctuation">)</span>\nhttp<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n</code></pre></div><h2 id="go-micro"><a class="header-anchor" href="#go-micro" aria-hidden="true">#</a> go-micro</h2>',30);o.render=function(e,t,o,p,r,c){return a(),n("div",null,[s])};export default o;export{t as __pageData};
