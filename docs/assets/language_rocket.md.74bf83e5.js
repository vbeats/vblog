import{o as n,c as a,d as s}from"./app.9f9f1749.js";const e='{"title":"RocketMQ 🚀","description":"","frontmatter":{},"relativePath":"language/rocket.md","lastUpdated":1627891509322}',t={},o=s('<h1 id="rocketmq-🚀"><a class="header-anchor" href="#rocketmq-🚀" aria-hidden="true">#</a> RocketMQ 🚀</h1><p>支持 push pull 消费,本质都是消费者拉取消息</p><p>broker 初始会创建多个队列, producer 发送的消息只在每个队列内部有序</p><p>广播模式: consumer 需要指定消费模式为广播模式</p><div class="language-properties"><pre><code><span class="token comment"># nameServer地址，这里nameserver是单台，如果nameserver是多台集群的话，就用分号分割（即namesrvAddr=ip1:port1;ip2:port2;ip3:port3）</span>\n<span class="token attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token attr-value">xxxx:9876;xxxxx:9876</span>\n<span class="token comment"># 所属集群名字</span>\n<span class="token attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token attr-value">rocketmq-cluster</span>\n<span class="token comment"># broker名字，注意此处不同的配置文件填写的不一样  例如：在a.properties 文件中写 broker-a  在b.properties 文件中写 broker-b</span>\n<span class="token attr-name">brokerName</span><span class="token punctuation">=</span><span class="token attr-value">broker-a</span>\n<span class="token comment"># 0 表示 Master，&gt;0 表示 Slave</span>\n<span class="token attr-name">brokerId</span><span class="token punctuation">=</span><span class="token attr-value">0</span>\n<span class="token comment"># 删除文件时间点，默认凌晨 4点</span>\n<span class="token attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token attr-value">04</span>\n<span class="token comment"># 文件保留时间，默认 48 小时</span>\n<span class="token attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token attr-value">48</span>\n<span class="token comment"># Broker 的角色: ASYNC_MASTER 异步复制Master ; SYNC_MASTER 同步双写Master; SLAVE</span>\n<span class="token attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token attr-value">ASYNC_MASTER</span>\n<span class="token comment"># 刷盘方式 ASYNC_FLUSH 异步刷盘; SYNC_FLUSH 同步刷盘</span>\n<span class="token attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token attr-value">ASYNC_FLUSH</span>\n<span class="token comment"># Broker 对外服务的监听端口</span>\n<span class="token attr-name">listenPort</span><span class="token punctuation">=</span><span class="token attr-value">10911</span>\n<span class="token comment"># 存储路径</span>\n<span class="token attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token attr-value">/app/custom/data/rocketmq/store-a</span>\n\n\n<span class="token comment"># 在发送消息时，自动创建服务器不存在的topic，默认创建的队列数。由于是4个broker节点，所以设置为4</span>\n<span class="token comment"># defaultTopicQueueNums=4</span>\n<span class="token comment"># 是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>\n<span class="token attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token attr-value">true</span>\n<span class="token comment"># 是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>\n<span class="token attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token attr-value">true</span>\n<span class="token comment"># commitLog每个文件的大小默认1G</span>\n<span class="token attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token attr-value">1073741824</span>\n<span class="token comment"># ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>\n<span class="token attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token attr-value">300000</span>\n<span class="token comment"># destroyMapedFileIntervalForcibly=120000</span>\n<span class="token comment"># redeleteHangedFileInterval=120000</span>\n<span class="token comment"># 检测物理文件磁盘空间</span>\n<span class="token attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token attr-value">88</span>\n<span class="token comment"># commitLog 存储路径</span>\n<span class="token comment">#storePathCommitLog=/data/rocketmq/store/commitlog</span>\n<span class="token comment"># 消费队列存储路径存储路径</span>\n<span class="token comment">#storePathConsumeQueue=/data/rocketmq/store/consumequeue</span>\n<span class="token comment"># 消息索引存储路径</span>\n<span class="token comment">#storePathIndex=/data/rocketmq/store/index</span>\n<span class="token comment"># checkpoint 文件存储路径</span>\n<span class="token comment">#storeCheckpoint=/data/rocketmq/store/checkpoint</span>\n<span class="token comment"># abort 文件存储路径</span>\n<span class="token comment">#abortFile=/data/rocketmq/store/abort</span>\n<span class="token comment"># 限制的消息大小</span>\n<span class="token attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token attr-value">65536</span>\n<span class="token comment">#flushCommitLogLeastPages=4</span>\n<span class="token comment">#flushConsumeQueueLeastPages=2</span>\n<span class="token comment">#flushCommitLogThoroughInterval=10000</span>\n<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>\n\n<span class="token comment"># 发消息线程池数量</span>\n<span class="token comment">#sendMessageThreadPoolNums=128</span>\n<span class="token comment"># 拉消息线程池数量</span>\n<span class="token comment">#pullMessageThreadPoolNums=128</span>\n</code></pre></div>',5);t.render=function(s,e,t,p,c,r){return n(),a("div",null,[o])};export default t;export{e as __pageData};
