import{o as n,c as s,d as a}from"./app.9f9f1749.js";const o='{"title":"Proxy","description":"","frontmatter":{},"headers":[{"level":2,"title":"HaProxy","slug":"haproxy"},{"level":2,"title":"Keepalived","slug":"keepalived"}],"relativePath":"open/proxy.md","lastUpdated":1627803082902}',p={},t=a('<h1 id="proxy"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h1><p>代理 负载均衡</p><h2 id="haproxy"><a class="header-anchor" href="#haproxy" aria-hidden="true">#</a> HaProxy</h2><p>支持 TCP HTTP <code>global</code>: haproxy 运行相关的全局配置 <code>defaults</code>: 默认参数配置 <code>listen</code>: 监听配置 <code>frontend</code>: 处理客户端请求, 按照规则分发请求 <code>backend</code>: 后端集群配置</p><div class="language-bash"><pre><code><span class="token comment"># 配置文件</span>\n<span class="token comment"># 全局配置</span>\nglobal\n    <span class="token comment"># 启用每个实例日志记录事件和流量。</span>\n    log global\n    <span class="token comment"># 设置日志文件输出定向</span>\n    log <span class="token number">127.0</span>.0.1 local3 info\n    <span class="token comment"># 需要开启rsyslog</span>\n    <span class="token comment"># vim /etc/rsyslog.conf</span>\n    <span class="token comment"># 添加local3.* /var/log/haproxy.log</span>\n\n    <span class="token comment"># 改变当前工作目录</span>\n    <span class="token function">chroot</span> /usr/local/haproxy\n\n    <span class="token comment"># 用户与用户组</span>\n    user haproxy\n    group haproxy\n\n    <span class="token comment"># 守护进程启动，运维方式为后台工作</span>\n    daemon\n\n    <span class="token comment"># 最大连接数</span>\n    maxconn <span class="token number">4000</span>\n\n<span class="token comment"># 作用于其后紧跟的listen块，直至下一个defaults 块，下一个default 将替换上一个块作用于以后的listen</span>\ndefaults\n\n    <span class="token comment"># 默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK</span>\n    mode http\n\n    <span class="token comment"># maxconn 65535         maxconn 每个进程可用的最大连接数</span>\n    <span class="token comment"># retries 3         当对server的connection失败后，重试的次数 　</span>\n    <span class="token comment"># option abortonclose     启用或禁用在队列中挂起的中止请求的早期丢弃</span>\n    <span class="token comment"># option redispatch     启用或禁用在连接故障情况下的会话重新分配</span>\n    <span class="token comment"># option dontlognull     启用和禁用 记录 空连接</span>\n    <span class="token comment"># option httpclose         每次请求完毕后主动关闭http通道，HA-Proxy不支持keep-alive模式</span>\n    <span class="token comment"># option forwardfor     获得客户端IP</span>\n    <span class="token comment"># option httplog        记录HTTP 请求,session 状态和计时器</span>\n    option httplog\n    option dontlognull\n    <span class="token function">timeout</span> connect <span class="token number">5000</span>\n    <span class="token function">timeout</span> client <span class="token number">50000</span>\n    <span class="token function">timeout</span> server <span class="token number">50000</span>\n\n\n<span class="token comment">#前端配置，http_front名称可自定义</span>\nfrontend http_front\n\n    <span class="token comment"># bind *:443 ssl crt /etc/haproxy/cert.pem        启用ssl证书</span>\n    <span class="token comment"># bind *:80                        发起http请求道80端口，会被转发到设置的ip及端口</span>\n    <span class="token builtin class-name">bind</span> *:80\n\n    stats <span class="token builtin class-name">enable</span>\n    <span class="token comment">#haproxy的状态管理页面，通过/haproxy?stats来访问</span>\n    stats uri /haproxy?stats\n    <span class="token comment"># stats auth &lt;user&gt;:&lt;passwd&gt;</span>\n    default_backend http_back\n\n<span class="token comment">#后端配置，http_back名称可自定义</span>\nbackend http_back\n\n    <span class="token comment"># 负载均衡方式</span>\n    <span class="token comment"># source 根据请求源IP</span>\n    <span class="token comment"># static-rr 根据权重</span>\n    <span class="token comment"># leastconn 最少连接者先处理</span>\n    <span class="token comment"># uri 根据请求的uri</span>\n    <span class="token comment"># url_param 根据请求的url参数</span>\n    <span class="token comment"># rdp-cookie 据据cookie(name)来锁定并哈希每一次请求</span>\n    <span class="token comment"># hdr(name) 根据HTTP请求头来锁定每一次HTTP请求</span>\n    <span class="token comment"># roundrobin 轮询方式</span>\n    balance roundrobin\n\n    <span class="token comment">#设置健康检查页面</span>\n    option httpchk GET /index.html\n\n    <span class="token comment">#传递客户端真实IP</span>\n    option forwardfor header X-Forwarded-For\n\n    <span class="token comment"># inter 2000 健康检查时间间隔2秒</span>\n    <span class="token comment"># rise 3 检测多少次才认为是正常的</span>\n    <span class="token comment"># fall 3 失败多少次才认为是不可用的</span>\n    <span class="token comment"># weight 30 权重</span>\n    <span class="token comment"># 需要转发的ip及端口</span>\n    <span class="token comment"># server &lt;name&gt; &lt;address&gt;[:port] [settings ...]</span>\n    <span class="token comment"># default-server [settings ...]</span>\n    server node1 xxxxx:8081 check inter <span class="token number">2000</span> rise <span class="token number">3</span> fall <span class="token number">3</span> weight <span class="token number">30</span>\n    server node2 xxxxx:8082 check inter <span class="token number">2000</span> rise <span class="token number">3</span> fall <span class="token number">3</span> weight <span class="token number">30</span>\n\n    <span class="token comment"># server first  10.1.1.1:1080 cookie first  check inter 1000</span>\n    <span class="token comment"># server second 10.1.1.2:1080 cookie second check inter 1000</span>\n    <span class="token comment"># server transp ipv4@</span>\n    <span class="token comment"># server backup &quot;${SRV_BACKUP}:1080&quot; backup</span>\n    <span class="token comment"># server www1_dc1 &quot;${LAN_DC1}.101:80&quot;</span>\n    <span class="token comment"># server www1_dc2 &quot;${LAN_DC2}.101:80&quot;</span>\n\n<span class="token comment"># haproxy的acl访问控制</span>\nfrontend http_front\n    <span class="token builtin class-name">bind</span> *:80\n    stats uri /haproxy?stats\n\n    <span class="token comment">#创建一个acl，is_http_back2是acl的名称，可自定义，用于判断主机名是否为www.back2.com</span>\n    acl is_http_back2 hdr_end<span class="token punctuation">(</span>host<span class="token punctuation">)</span> www.back2.com\n\n    <span class="token comment">#通过正则判断主机名中是否为bbs.back.com或forum.back.com</span>\n    acl is_host_bbs hdr_reg<span class="token punctuation">(</span>host<span class="token punctuation">)</span> -i ^<span class="token punctuation">(</span>bbs.back.com<span class="token operator">|</span>forum.back.com<span class="token punctuation">)</span>\n\n    <span class="token comment">#判断ua是否为android</span>\n    acl is_ua_android hdr_reg<span class="token punctuation">(</span>User-Agent<span class="token punctuation">)</span> -i android\n\n    <span class="token comment">#判断主机名开头是否为img.或css.或js.</span>\n    acl is_host_static hdr_beg<span class="token punctuation">(</span>host<span class="token punctuation">)</span> -i img. css. js.\n\n    <span class="token comment">#判断url路径中是否有/bbs</span>\n    acl is_path_bbs path_beg -i /bbs\n\n    <span class="token comment">#判断url文件结尾</span>\n    acl is_php path_end -i .php\n\n    <span class="token comment">#通过正则判断url中结尾以</span>\n    acl is_static_file url_reg -i /*.<span class="token punctuation">(</span>css<span class="token operator">|</span>jpg<span class="token operator">|</span>png<span class="token operator">|</span>jpeg<span class="token operator">|</span>gif<span class="token punctuation">)</span>$\n\n    <span class="token comment">#效果同上</span>\n    acl is_static_file2 path_end -i .css .jpg .png .jpeg .gif\n\n    <span class="token comment">#如果主机名是www.back2.com那么就使用后端http_back2</span>\n    <span class="token comment"># use_backend &lt;backend&gt; [{if | unless} &lt;condition&gt;]</span>\n    use_backend http_back2 <span class="token keyword">if</span> is_http_back2 or is_ua_android\n\n    <span class="token comment">#默认使用的后端</span>\n    default_backend http_back\n\nbackend http_back\n    balance roundrobin\n    option httpchk GET /index.html\n    option forwardfor header X-Forwarded-For\n    server node1 <span class="token number">192.168</span>.1.222:8080 check inter <span class="token number">2000</span> rise <span class="token number">3</span> fall <span class="token number">3</span> weight <span class="token number">30</span>\n\nbackend http_back2\n    balance roundrobin\n    option httpchk GET /index.html\n    option forwardfor header X-Forwarded-For\n    server node2 <span class="token number">192.168</span>.1.222:8082 check inter <span class="token number">2000</span> rise <span class="token number">3</span> fall <span class="token number">3</span> weight <span class="token number">30</span>\n</code></pre></div><p><code>log</code> 格式:</p><div class="language-bash"><pre><code>log-format %T<span class="token punctuation">\\</span> %t<span class="token punctuation">\\</span> Some<span class="token punctuation">\\</span> Text\nlog-format %<span class="token punctuation">{</span>+Q<span class="token punctuation">}</span>o<span class="token punctuation">\\</span> %t<span class="token punctuation">\\</span> %s<span class="token punctuation">\\</span> %<span class="token punctuation">{</span>-Q<span class="token punctuation">}</span>r\n\nlog-format-sd %<span class="token punctuation">{</span>+Q,+E<span class="token punctuation">}</span>o<span class="token punctuation">\\</span> <span class="token punctuation">[</span>exampleSDID@1234<span class="token punctuation">\\</span> <span class="token assign-left variable">header</span><span class="token operator">=</span>%<span class="token punctuation">[</span>capture.req.hdr<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n\n+---+------+-----------------------------------------------+-------------+\n  <span class="token operator">|</span> R <span class="token operator">|</span> var  <span class="token operator">|</span> field name <span class="token punctuation">(</span><span class="token number">8.2</span>.2 and <span class="token number">8.2</span>.3 <span class="token keyword">for</span> description<span class="token punctuation">)</span>  <span class="token operator">|</span> <span class="token builtin class-name">type</span>        <span class="token operator">|</span>\n  +---+------+-----------------------------------------------+-------------+\n  <span class="token operator">|</span>   <span class="token operator">|</span> %o   <span class="token operator">|</span> special variable, apply flags on all next var <span class="token operator">|</span>             <span class="token operator">|</span>\n  +---+------+-----------------------------------------------+-------------+\n  <span class="token operator">|</span>   <span class="token operator">|</span> %B   <span class="token operator">|</span> bytes_read           <span class="token punctuation">(</span>from server to client<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %CC  <span class="token operator">|</span> captured_request_cookie                       <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %CS  <span class="token operator">|</span> captured_response_cookie                      <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %H   <span class="token operator">|</span> <span class="token function">hostname</span>                                      <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %HM  <span class="token operator">|</span> HTTP method <span class="token punctuation">(</span>ex: POST<span class="token punctuation">)</span>                        <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %HP  <span class="token operator">|</span> HTTP request URI without query string <span class="token punctuation">(</span>path<span class="token punctuation">)</span>  <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %HQ  <span class="token operator">|</span> HTTP request URI query string <span class="token punctuation">(</span>ex: ?bar<span class="token operator">=</span>baz<span class="token punctuation">)</span>  <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %HU  <span class="token operator">|</span> HTTP request URI <span class="token punctuation">(</span>ex: /foo?bar<span class="token operator">=</span>baz<span class="token punctuation">)</span>           <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %HV  <span class="token operator">|</span> HTTP version <span class="token punctuation">(</span>ex: HTTP/1.0<span class="token punctuation">)</span>                   <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ID  <span class="token operator">|</span> unique-id                                     <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ST  <span class="token operator">|</span> status_code                                   <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %T   <span class="token operator">|</span> gmt_date_time                                 <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Ta  <span class="token operator">|</span> Active <span class="token function">time</span> of the request <span class="token punctuation">(</span>from TR to end<span class="token punctuation">)</span>   <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Tc  <span class="token operator">|</span> Tc                                            <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Td  <span class="token operator">|</span> Td <span class="token operator">=</span> Tt - <span class="token punctuation">(</span>Tq + Tw + Tc + Tr<span class="token punctuation">)</span>                 <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Tl  <span class="token operator">|</span> local_date_time                               <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Th  <span class="token operator">|</span> connection handshake <span class="token function">time</span> <span class="token punctuation">(</span>SSL, PROXY proto<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %Ti  <span class="token operator">|</span> idle <span class="token function">time</span> before the HTTP request             <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %Tq  <span class="token operator">|</span> Th + Ti + TR                                  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %TR  <span class="token operator">|</span> <span class="token function">time</span> to receive the full request from 1st byte<span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %Tr  <span class="token operator">|</span> Tr <span class="token punctuation">(</span>response <span class="token function">time</span><span class="token punctuation">)</span>                            <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Ts  <span class="token operator">|</span> timestamp                                     <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Tt  <span class="token operator">|</span> Tt                                            <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %Tw  <span class="token operator">|</span> Tw                                            <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %U   <span class="token operator">|</span> bytes_uploaded       <span class="token punctuation">(</span>from client to server<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ac  <span class="token operator">|</span> actconn                                       <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %b   <span class="token operator">|</span> backend_name                                  <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %bc  <span class="token operator">|</span> beconn      <span class="token punctuation">(</span>backend concurrent connections<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %bi  <span class="token operator">|</span> backend_source_ip       <span class="token punctuation">(</span>connecting address<span class="token punctuation">)</span>  <span class="token operator">|</span> IP          <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %bp  <span class="token operator">|</span> backend_source_port     <span class="token punctuation">(</span>connecting address<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %bq  <span class="token operator">|</span> backend_queue                                 <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ci  <span class="token operator">|</span> client_ip                 <span class="token punctuation">(</span>accepted address<span class="token punctuation">)</span>  <span class="token operator">|</span> IP          <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %cp  <span class="token operator">|</span> client_port               <span class="token punctuation">(</span>accepted address<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %f   <span class="token operator">|</span> frontend_name                                 <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %fc  <span class="token operator">|</span> feconn     <span class="token punctuation">(</span>frontend concurrent connections<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %fi  <span class="token operator">|</span> frontend_ip              <span class="token punctuation">(</span>accepting address<span class="token punctuation">)</span>  <span class="token operator">|</span> IP          <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %fp  <span class="token operator">|</span> frontend_port            <span class="token punctuation">(</span>accepting address<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ft  <span class="token operator">|</span> frontend_name_transport <span class="token punctuation">(</span><span class="token string">&#39;~&#39;</span> suffix <span class="token keyword">for</span> SSL<span class="token punctuation">)</span>  <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %lc  <span class="token operator">|</span> frontend_log_counter                          <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %hr  <span class="token operator">|</span> captured_request_headers default style        <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %hrl <span class="token operator">|</span> captured_request_headers CLF style            <span class="token operator">|</span> string list <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %hs  <span class="token operator">|</span> captured_response_headers default style       <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %hsl <span class="token operator">|</span> captured_response_headers CLF style           <span class="token operator">|</span> string list <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ms  <span class="token operator">|</span> accept <span class="token function">date</span> milliseconds <span class="token punctuation">(</span>left-padded with <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %pid <span class="token operator">|</span> PID                                           <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %r   <span class="token operator">|</span> http_request                                  <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %rc  <span class="token operator">|</span> retries                                       <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %rt  <span class="token operator">|</span> request_counter <span class="token punctuation">(</span>HTTP req or TCP session<span class="token punctuation">)</span>     <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %s   <span class="token operator">|</span> server_name                                   <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %sc  <span class="token operator">|</span> srv_conn     <span class="token punctuation">(</span>server concurrent connections<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %si  <span class="token operator">|</span> server_IP                   <span class="token punctuation">(</span>target address<span class="token punctuation">)</span>  <span class="token operator">|</span> IP          <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %sp  <span class="token operator">|</span> server_port                 <span class="token punctuation">(</span>target address<span class="token punctuation">)</span>  <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %sq  <span class="token operator">|</span> srv_queue                                     <span class="token operator">|</span> numeric     <span class="token operator">|</span>\n  <span class="token operator">|</span> S <span class="token operator">|</span> %sslc<span class="token operator">|</span> ssl_ciphers <span class="token punctuation">(</span>ex: AES-SHA<span class="token punctuation">)</span>                     <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> S <span class="token operator">|</span> %sslv<span class="token operator">|</span> ssl_version <span class="token punctuation">(</span>ex: TLSv1<span class="token punctuation">)</span>                       <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %t   <span class="token operator">|</span> date_time      <span class="token punctuation">(</span>with millisecond resolution<span class="token punctuation">)</span>  <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %tr  <span class="token operator">|</span> date_time of HTTP request                     <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %trg <span class="token operator">|</span> gmt_date_time of start of HTTP request        <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %trl <span class="token operator">|</span> local_date_time of start of HTTP request      <span class="token operator">|</span> <span class="token function">date</span>        <span class="token operator">|</span>\n  <span class="token operator">|</span>   <span class="token operator">|</span> %ts  <span class="token operator">|</span> termination_state                             <span class="token operator">|</span> string      <span class="token operator">|</span>\n  <span class="token operator">|</span> H <span class="token operator">|</span> %tsc <span class="token operator">|</span> termination_state with cookie status          <span class="token operator">|</span> string      <span class="token operator">|</span>\n  +---+------+-----------------------------------------------+-------------+\n</code></pre></div><p>错误页面重定向:</p><div class="language-bash"><pre><code><span class="token comment"># 200, 400, 403, 405, 408, 425, 429, 500, 502, 503, and 504 不支持404</span>\nerrorloc <span class="token operator">&lt;</span>code<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>\nerrorloc302 <span class="token operator">&lt;</span>code<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>\n\nerrorfile <span class="token operator">&lt;</span>code<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="keepalived"><a class="header-anchor" href="#keepalived" aria-hidden="true">#</a> Keepalived</h2><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener noreferrer">文档</a></p><p>故障转移 健康检查 <code>vrrp</code>协议, 竞选 master, master 发送广播, master 挂掉, 备用节点接管</p><div class="language-bash"><pre><code>global_refs<span class="token punctuation">{</span>\n    <span class="token comment"># 节点路由唯一标识</span>\n    router_id xxx\n<span class="token punctuation">}</span>\n<span class="token comment"># 主备节点要用同一个vrrp实例名</span>\nvrrp_instance xx1<span class="token punctuation">{</span>\n    <span class="token comment"># 备节点 BACKUP</span>\n    state MASTER\n    interface eth0\n    <span class="token comment"># 0~255 用于区分vrrp实例</span>\n    virtual_router_id <span class="token number">51</span>\n    <span class="token comment"># 节点优先级  主备差50</span>\n    priority <span class="token number">200</span>\n    <span class="token comment"># 心跳间隔</span>\n    advert_init <span class="token number">1</span>\n    <span class="token comment"># 通信认证</span>\n    authentication <span class="token punctuation">{</span>\n        auth_type PASS\n        auth_pass xxxxxx\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># 虚拟ip</span>\n    virtual_ipaddress<span class="token punctuation">{</span>\n        xxxxx/24\n        xxxxx/24\n        xxxxx/24\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',13);p.render=function(a,o,p,e,r,c){return n(),s("div",null,[t])};export default p;export{o as __pageData};
