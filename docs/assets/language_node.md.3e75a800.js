import{o as n,c as s,d as a}from"./app.0c57223d.js";const t='{"title":"module","description":"","frontmatter":{},"headers":[{"level":2,"title":"module","slug":"module"},{"level":2,"title":"Buffer","slug":"buffer"},{"level":2,"title":"fs","slug":"fs"},{"level":2,"title":"http","slug":"http"},{"level":2,"title":"url","slug":"url"},{"level":2,"title":"mongo 操作","slug":"mongo-操作"},{"level":2,"title":"express","slug":"express"},{"level":2,"title":"mongoose","slug":"mongoose"},{"level":2,"title":"koa","slug":"koa"}],"relativePath":"language/node.md","lastUpdated":1627206634547}',p={},o=a('<h2 id="module"><a class="header-anchor" href="#module" aria-hidden="true">#</a> module</h2><p><code>common js</code>模块导入导出 新版本也支持<code>es6</code>吧</p><div class="language-js"><pre><code>exports<span class="token punctuation">.</span>xx<span class="token operator">=</span><span class="token operator">...</span><span class="token punctuation">.</span>\nmodule<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="buffer"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> Buffer</h2><p><code>字节数组</code>, 直接操作内存数据</p><p><a href="https://nodejs.org/api/buffer.html" target="_blank" rel="noopener noreferrer">API</a></p><h2 id="fs"><a class="header-anchor" href="#fs" aria-hidden="true">#</a> fs</h2><p><code>文件操作</code> 同步 or 异步</p><p><a href="https://nodejs.org/api/fs.html" target="_blank" rel="noopener noreferrer">API</a></p><h2 id="http"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h2><div class="language-js"><pre><code>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="url"><a class="header-anchor" href="#url" aria-hidden="true">#</a> url</h2><div class="language-js"><pre><code>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> useUnifiedTopology<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 底层用的querystring解析 不推荐使用</span>\n<span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// √</span>\n</code></pre></div><h2 id="mongo-操作"><a class="header-anchor" href="#mongo-操作" aria-hidden="true">#</a> mongo 操作</h2><p><code>mongodb</code> <a href="https://mongodb.github.io/node-mongodb-native/" target="_blank" rel="noopener noreferrer">文档</a></p><p><code>generic-pool</code> : 连接池模块</p><div class="language-js"><pre><code><span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nclient<span class="token punctuation">.</span><span class="token function">connection</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  db <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// ....</span>\n  db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>增删改查:</p><div class="language-js"><pre><code>db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">.</span>\n\ndb<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>   <span class="token comment">// 多条Many</span>\n\ndb<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment">/* 条件 */</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>$set<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;xx&quot;</span><span class="token operator">:</span><span class="token string">&quot;oo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>callback<span class="token punctuation">)</span>\n\ndb<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment">/* 条件 */</span><span class="token punctuation">}</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>\n</code></pre></div><h2 id="express"><a class="header-anchor" href="#express" aria-hidden="true">#</a> express</h2><p><code>get</code>请求参数: <code>request.query</code></p><p><code>/:id</code>: <code>request.params[&#39;id&#39;]</code></p><p><code>post</code>请求参数: <code>application/json</code> <code>application/x-www-form-urlencoded</code></p><p>使用中间件 <code>body-parser.json()</code> <code>body-parser.urlencoded({})</code></p><p>静态资源: <code>app.use([path ,] express.static(&#39;public&#39;))</code></p><p>中间件:</p><div class="language-js"><pre><code><span class="token comment">// 应用级中间件</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 路由级中间件</span>\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/xx&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 错误处理</span>\n<span class="token comment">// 最后一级, 处理匹配不到的路由</span>\n\n<span class="token comment">// 内置中间件</span>\nexpress<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>路由模块化 <code>express.router()</code> 分离路由到单独的模块</p><p><code>app.use(&#39;/xxx&#39;,router)</code></p><p>文件上传 <code>multer</code>模块</p><h2 id="mongoose"><a class="header-anchor" href="#mongoose" aria-hidden="true">#</a> mongoose</h2><p>操作<code>mongo</code> <a href="https://mongoosejs.com/docs/index.html" target="_blank" rel="noopener noreferrer">文档</a></p><p><code>collection</code> —&gt; <code>xxSchema</code> ----&gt; <code>model</code></p><h2 id="koa"><a class="header-anchor" href="#koa" aria-hidden="true">#</a> koa</h2><p><code>koa koa-router</code></p><div class="language-js"><pre><code>router\n  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/xx&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;oo&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/xxx/:id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// query string</span>\n    <span class="token comment">// ctx.request  ctx.query  ctx.querystring</span>\n    <span class="token comment">// ctx.params</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>中间件</p><div class="language-js"><pre><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/xx&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// post</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">koa-bodyparser()</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/xx&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ctx.request.body</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 静态资源</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;koa-static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p><code>request</code> —&gt; <code>app中间件</code> —&gt; <code>router处理</code> —&gt; <code>app中间件</code> —&gt; <code>client</code></p>',39);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
