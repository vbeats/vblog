import{o as n,c as s,a as e,t as a,b as t,d as l}from"./app.9f9f1749.js";const o='{"title":"Linux","description":"","frontmatter":{},"headers":[{"level":2,"title":"LVM 磁盘管理","slug":"lvm-磁盘管理"},{"level":2,"title":"rsync 同步","slug":"rsync-同步"},{"level":2,"title":"zsh","slug":"zsh"},{"level":2,"title":"Vim","slug":"vim"},{"level":2,"title":"dash","slug":"dash"},{"level":2,"title":"root 用户","slug":"root-用户"},{"level":2,"title":"ansible","slug":"ansible"},{"level":3,"title":"playbook","slug":"playbook"}],"relativePath":"other/linux.md","lastUpdated":1627891509326}',p={},c=e("h1",{id:"linux"},[e("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),t(" Linux")],-1),i=e("h2",{id:"lvm-磁盘管理"},[e("a",{class:"header-anchor",href:"#lvm-磁盘管理","aria-hidden":"true"},"#"),t(" LVM 磁盘管理")],-1),r=e("blockquote",null,[e("p",null,"物理硬盘 --\x3e 物理卷 PV --\x3e 卷组 VG --\x3e 逻辑卷 LV --\x3e 挂载")],-1),k=e("p",null,[e("img",{src:"/assets/lvm.791202ed.png",alt:"LVM"})],-1),u=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"# gpt 分区"),t("\ngdisk /dev/sdn\n\n"),e("span",{class:"token comment"},"# ..."),t("\npartprobe "),e("span",{class:"token comment"},"# 刷新分区表"),t("\n\n"),e("span",{class:"token comment"},"# 创建PV卷"),t("\n\npvcreate /dev/sdn /dev/sdx\n\n"),e("span",{class:"token comment"},"# 卷组"),t("\n\nvgcreate -s 32M xxx /dev/sdn  "),e("span",{class:"token comment"},"# -s PE最小块大小  4M整数倍"),t("\n\n"),e("span",{class:"token comment"},"# 已有vgroup 增加一块  pv"),t("\nvgextend xxx  /dev/sdb\n\n"),e("span",{class:"token comment"},"# 逻辑卷"),t("\n\nlvcreate -L 15G -n xxxx1  xxx"),e("span",{class:"token punctuation"},"("),t("vg name"),e("span",{class:"token punctuation"},")"),t(),e("span",{class:"token comment"},"# -L 容量大小"),t("\n\n"),e("span",{class:"token comment"},"# 格式化逻辑卷"),t("\n\nmkfs.ext4 /dev/xxx/xxxx1   "),e("span",{class:"token comment"},"# /dev目录下会存在  卷组名/逻辑卷名的路径"),t("\n\n"),e("span",{class:"token comment"},"# 挂载 /dev/xxx/xxxx1 到具体目录上"),t("\n\n"),e("span",{class:"token comment"},"# 自动挂载 /etc/fstab 增加"),t("\n/dev/xxx/xxxx1 /data       ext4    defaults       "),e("span",{class:"token number"},"0"),t("       "),e("span",{class:"token number"},"0"),t("\n\n\n"),e("span",{class:"token comment"},"# 扩展/缩小逻辑卷"),t("\nlvextend -L +50G /dev/xxx/xxxx1   "),e("span",{class:"token comment"},"# 增加50G"),t("\nlvreduce -L -50G /dev/xxx/xxxx1   "),e("span",{class:"token comment"},"# 减小50G"),t("\n\nlvextend -r -l +100%FREE /dev/xxx/xxxx1  "),e("span",{class:"token comment"},"# 分配vg剩余所有空间  -r 刷新文件系统大小"),t("\n\n"),e("span",{class:"token comment"},"# 更新"),t("\nresize2fs /dev/xxx/xxxx1  "),e("span",{class:"token comment"},"# etx格式"),t("\nxfs_growfs /dev/xxx/xxx1  "),e("span",{class:"token comment"},"# xfs格式"),t("\n")])])],-1),d=e("h2",{id:"rsync-同步"},[e("a",{class:"header-anchor",href:"#rsync-同步","aria-hidden":"true"},"#"),t(" rsync 同步")],-1),x=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"# 远程 ----\x3e 本地  root@xxx:/xxx  /home....."),t("\n"),e("span",{class:"token function"},"rsync"),t(" -arPu --exclude "),e("span",{class:"token string"},"'demo1/'"),t(" --exclude "),e("span",{class:"token string"},"'demo2/'"),t(" --exclude "),e("span",{class:"token string"},"'demo3/'"),t(" root@202.60.245.163:/root/test /root\n\n-v, --verbose 详细模式输出\n-q, --quiet 精简输出模式\n-c, --checksum 打开校验开关，强制对文件传输进行校验\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD\n-r, --recursive 对子目录以递归模式处理\n-R, --relative 使用相对路径信息\n-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。\n--backup-dir 将备份文件"),e("span",{class:"token punctuation"},"("),t("如~filename"),e("span",{class:"token punctuation"},")"),t("存放在在目录下。\n-suffix"),e("span",{class:"token operator"},"="),t("SUFFIX 定义备份文件前缀\n-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。"),e("span",{class:"token punctuation"},"("),t("不覆盖更新的文件"),e("span",{class:"token punctuation"},")"),t("\n-l, --links 保留软链结\n-L, --copy-links 想对待常规文件一样处理软链结\n--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结\n--safe-links 忽略指向SRC路径目录树以外的链结\n-H, --hard-links 保留硬链结\n-p, --perms 保持文件权限\n-o, --owner 保持文件属主信息\n-g, --group 保持文件属组信息\n-D, --devices 保持设备文件信息\n-t, --times 保持文件时间信息\n-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间\n-n, --dry-run现实哪些文件将被传输\n-W, --whole-file 拷贝文件，不进行增量检测\n-x, --one-file-system 不要跨越文件系统边界\n-B, --block-size"),e("span",{class:"token operator"},"="),t("SIZE 检验算法使用的块尺寸，默认是700字节\n-e, --rsh"),e("span",{class:"token operator"},"="),t("COMMAND 指定使用rsh、ssh方式进行数据同步\n--rsync-path"),e("span",{class:"token operator"},"="),e("span",{class:"token environment constant"},"PATH"),t(" 指定远程服务器上的rsync命令所在路径信息\n-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件\n--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件\n--delete 删除那些DST中SRC没有的文件\n--delete-excluded 同样删除接收端那些被该选项指定排除的文件\n--delete-after 传输结束以后再删除\n--ignore-errors 及时出现IO错误也进行删除\n--max-delete"),e("span",{class:"token operator"},"="),t("NUM 最多删除NUM个文件\n--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输\n--force 强制删除目录，即使不为空\n--numeric-ids 不将数字的用户和组ID匹配为用户名和组名\n--timeout"),e("span",{class:"token operator"},"="),t("TIME IP超时时间，单位为秒\n-I, --ignore-times 不跳过那些有同样的时间和长度的文件\n--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间\n--modify-window"),e("span",{class:"token operator"},"="),t("NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0\n-T --temp-dir"),e("span",{class:"token operator"},"="),t("DIR 在DIR中创建临时文件\n--compare-dest"),e("span",{class:"token operator"},"="),t("DIR 同样比较DIR中的文件来决定是否需要备份\n-P 等同于 --partial\n--progress 显示备份过程\n-z, --compress 对备份的文件在传输时进行压缩处理\n--exclude"),e("span",{class:"token operator"},"="),t("PATTERN 指定排除不需要传输的文件模式\n--include"),e("span",{class:"token operator"},"="),t("PATTERN 指定不排除而需要传输的文件模式\n--exclude-from"),e("span",{class:"token operator"},"="),t("FILE 排除FILE中指定模式的文件\n--include-from"),e("span",{class:"token operator"},"="),t("FILE 不排除FILE指定模式匹配的文件\n--version 打印版本信息\n--address 绑定到特定的地址\n--config"),e("span",{class:"token operator"},"="),t("FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件\n--port"),e("span",{class:"token operator"},"="),t("PORT 指定其他的rsync服务端口\n--blocking-io 对远程shell使用阻塞IO\n-stats 给出某些文件的传输状态\n--progress 在传输时现实传输过程\n--log-format"),e("span",{class:"token operator"},"="),t("formAT 指定日志文件格式\n--password-file"),e("span",{class:"token operator"},"="),t("FILE 从FILE中得到密码\n--bwlimit"),e("span",{class:"token operator"},"="),t("KBPS 限制I/O带宽，KBytes per second\n-h, --help 显示帮助信息\n")])])],-1),m=e("h2",{id:"zsh"},[e("a",{class:"header-anchor",href:"#zsh","aria-hidden":"true"},"#"),t(" zsh")],-1),g=e("blockquote",null,[e("p",null,"home end 键 & 小键盘")],-1),h=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"# key bindings"),t("\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[1~"')]),t(" beginning-of-line\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[4~"')]),t(" end-of-line\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[5~"')]),t(" beginning-of-history\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[6~"')]),t(" end-of-history\n\n"),e("span",{class:"token comment"},"# for rxvt"),t("\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[8~"')]),t(" end-of-line\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[7~"')]),t(" beginning-of-line\n"),e("span",{class:"token comment"},"# for non RH/Debian xterm, can't hurt for RH/DEbian xterm"),t("\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('OH"')]),t(" beginning-of-line\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('OF"')]),t(" end-of-line\n"),e("span",{class:"token comment"},"# for freebsd console"),t("\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[H"')]),t(" beginning-of-line\nbindkey "),e("span",{class:"token string"},[t('"'),e("span",{class:"token entity",title:"\\e"},"\\e"),t('[F"')]),t(" end-of-line\n"),e("span",{class:"token comment"},"# completion in the middle of a line"),t("\nbindkey "),e("span",{class:"token string"},"'^i'"),t(" expand-or-complete-prefix\n\n"),e("span",{class:"token comment"},"# Fix numeric keypad"),t("\n"),e("span",{class:"token comment"},"# 0 . Enter"),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Op"'),t(),e("span",{class:"token string"},'"0"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[On"'),t(),e("span",{class:"token string"},'"."'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[OM"'),t(),e("span",{class:"token string"},'"^M"'),t("\n"),e("span",{class:"token comment"},"# 1 2 3"),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Oq"'),t(),e("span",{class:"token string"},'"1"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Or"'),t(),e("span",{class:"token string"},'"2"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Os"'),t(),e("span",{class:"token string"},'"3"'),t("\n"),e("span",{class:"token comment"},"# 4 5 6"),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ot"'),t(),e("span",{class:"token string"},'"4"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ou"'),t(),e("span",{class:"token string"},'"5"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ov"'),t(),e("span",{class:"token string"},'"6"'),t("\n"),e("span",{class:"token comment"},"# 7 8 9"),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ow"'),t(),e("span",{class:"token string"},'"7"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ox"'),t(),e("span",{class:"token string"},'"8"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Oy"'),t(),e("span",{class:"token string"},'"9"'),t("\n"),e("span",{class:"token comment"},"# + - * /"),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Ol"'),t(),e("span",{class:"token string"},'"+"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Om"'),t(),e("span",{class:"token string"},'"-"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Oj"'),t(),e("span",{class:"token string"},'"*"'),t("\nbindkey -s "),e("span",{class:"token string"},'"^[Oo"'),t(),e("span",{class:"token string"},'"/"'),t("\n\n")])])],-1),y=e("h2",{id:"vim"},[e("a",{class:"header-anchor",href:"#vim","aria-hidden":"true"},"#"),t(" Vim")],-1),b=e("blockquote",null,[e("p",null,".vimrc")],-1),f=e("p",null,[t("搜索高亮 "),e("code",null,"set hlsearch")],-1),v=e("h2",{id:"dash"},[e("a",{class:"header-anchor",href:"#dash","aria-hidden":"true"},"#"),t(" dash")],-1),_=e("p",null,"ubuntu 下 declare 报错:",-1),O=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token function"},"sudo"),t(" dpkg-reconfigure dash\n"),e("span",{class:"token comment"},"# 选否  ubuntu默认sh 指向了dash  通过上边命令  解除dash与sh的关联"),t("\n")])])],-1),I=e("h2",{id:"root-用户"},[e("a",{class:"header-anchor",href:"#root-用户","aria-hidden":"true"},"#"),t(" root 用户")],-1),L=e("p",null,[t("为"),e("code",null,"root"),t("用户设置密码")],-1),T=e("p",null,[e("code",null,"ubuntu"),t("开启"),e("code",null,"root"),t(": sshd 配置文件 "),e("code",null,"PermitRootLogin yes")],-1),E=e("h2",{id:"ansible"},[e("a",{class:"header-anchor",href:"#ansible","aria-hidden":"true"},"#"),t(" ansible")],-1),R=e("p",null,[e("code",null,"ansible all -m ping -v")],-1),D=e("p",null,[t("默认模块"),e("code",null,"command"),t(" 有些命令无法执行")],-1),P=e("p",null,[t("执行 shell "),e("code",null,"ansible xxx -m shell -a 'ls /'")],-1),S=e("p",null,[t("执行 shell 脚本 "),e("code",null,"ansible xxx -m script -a ./xx.sh")],-1),F=e("p",null,[e("code",null,"copy"),t(":支持目录")],-1),M=e("p",null,[e("code",null,"fetch"),t(":只能单文件")],-1),V=e("p",null,[e("code",null,"file"),t(": 操作文件 "),e("code",null,"ansible xxx -m file -a 'path=/data/xx.log state=touch group=xx owner=xx mode=777'")],-1),w=e("p",null,[e("code",null,"unarchive"),t(": copy=yes/no")],-1),z=e("p",null,[e("code",null,"archive"),t(),e("code",null,"hostname"),t(),e("code",null,"cron"),t(),e("code",null,"user"),t(),e("code",null,"setup")],-1),A=e("h3",{id:"playbook"},[e("a",{class:"header-anchor",href:"#playbook","aria-hidden":"true"},"#"),t(" playbook")],-1),C=e("p",null,[e("code",null,"ansible-playbook xxx.yaml [--check --list-hosts --list-tags --list-tasks --limit -v]")],-1),N=e("li",null,[e("p",null,"hosts"),e("p",null,"执行任务的主机")],-1),q=e("li",null,[e("p",null,"tasks"),e("p",null,"任务")],-1),G=e("p",null,"variables",-1),H=e("p",null,"变量",-1),U=e("p",null,"定义变量:",-1),j=l('',2);p.render=function(t,l,o,p,B,K){return n(),s("div",null,[c,i,r,k,u,d,x,m,g,h,y,b,f,v,_,O,I,L,T,E,R,D,P,S,F,M,V,w,z,A,C,e("ul",null,[N,q,e("li",null,[G,H,U,e("pre",null,[e("code",null,'  * `命令行参数 -e xxx=ooo`\n\n  * 直接使用`setup`的系统信息 `gather_facts`要打开\n\n  * 单独文件定义\n\n  `inventory`主机清单中指定变量\n\n  ```conf\n  [xxx] # 单个指定\n  192.168.100.1 xx=ooo\n  192.168.100.2 xx=oop\n\n  [xxx:vars] # 指定一组\n  mm=kk\n\n  ```\n\n  * set_fact模块定义\n\n      ```yaml\n      set_fact:\n          php_redis_package: "'+a(t.__php_redis_package)+'"\n      ```\n',1)])]),j])])};export default p;export{o as __pageData};
