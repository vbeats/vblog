"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[109],{9181:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7e9a8e90",path:"/base/base/nginx.html",title:"Nginx",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"location",slug:"location",children:[]},{level:2,title:"CORS",slug:"cors",children:[]},{level:2,title:"静态资源:",slug:"静态资源",children:[]},{level:2,title:"反向代理 IP 转发配置:",slug:"反向代理-ip-转发配置",children:[]},{level:2,title:"basic auth",slug:"basic-auth",children:[]},{level:2,title:"日志",slug:"日志",children:[]}],filePathRelative:"base/base/nginx.md",git:{updatedTime:1638950673e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},8768:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const t=(0,e._)("h1",{id:"nginx",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#nginx","aria-hidden":"true"},"#"),(0,e.Uk)(" Nginx")],-1),p={href:"https://www.nginx.cn/doc/",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("Nginx 文档"),l={href:"https://moonbingbing.gitbooks.io/openresty-best-practices/content/",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Openresty 文档"),o=(0,e.uE)('<h2 id="location" tabindex="-1"><a class="header-anchor" href="#location" aria-hidden="true">#</a> location</h2><table><thead><tr><th>pattern</th><th>含义</th></tr></thead><tbody><tr><td>= /xxx</td><td>完全匹配</td></tr><tr><td>^~ /xxx</td><td>以 xxx 开头, 不区分大小写</td></tr><tr><td>~ regex</td><td>以 xxx 开头, 分大小写</td></tr><tr><td>~* regex</td><td>不区分大小写正则匹配</td></tr><tr><td>/xxx</td><td>普通的前缀匹配</td></tr><tr><td>/</td><td>拦截所有</td></tr></tbody></table><h2 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h2><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code> <span class="token directive"><span class="token keyword">location</span> /test/</span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">add_header</span> <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> <span class="token string">&#39;*&#39;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">add_header</span> <span class="token string">&#39;Access-Control-Allow-Credentials&#39;</span> <span class="token string">&#39;true&#39;</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8080/test/</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源" aria-hidden="true">#</a> 静态资源:</h2><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> ~ \\.(jpeg|png|gif)</span><span class="token punctuation">{</span>\n            <span class="token comment"># ngx_http_header_module --&gt;&gt; add_header 添加响应头字段信息;</span>\n            <span class="token directive"><span class="token keyword">add_header</span> X-Cache <span class="token variable">$upstream_cache_status</span></span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_cache</span> picture</span><span class="token punctuation">;</span>\n            <span class="token directive"><span class="token keyword">proxy_cache_key</span> <span class="token variable">$host</span><span class="token variable">$uri</span><span class="token variable">$is_args</span><span class="token variable">$args</span></span><span class="token punctuation">;</span> <span class="token comment"># 以全路径md5值做做为Key</span>\n            <span class="token directive"><span class="token keyword">proxy_cache_valid</span> <span class="token number">200</span> <span class="token number">304</span> <span class="token number">12h</span></span><span class="token punctuation">;</span> <span class="token comment">#对不同的HTTP状态码设置不同的缓存时间</span>\n            <span class="token directive"><span class="token keyword">expires</span> <span class="token number">7d</span></span><span class="token punctuation">;</span> <span class="token comment">#总体缓存时间</span>\n            <span class="token directive"><span class="token keyword">root</span> /home/feiyanImage</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="反向代理-ip-转发配置" tabindex="-1"><a class="header-anchor" href="#反向代理-ip-转发配置" aria-hidden="true">#</a> 反向代理 IP 转发配置:</h2><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> REMOTE-HOST <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="basic-auth" tabindex="-1"><a class="header-anchor" href="#basic-auth" aria-hidden="true">#</a> basic auth</h2><p><code>apache2-utils</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>htpasswd -c -d /etc/nginx/pass_file  xxxxxx\n\n\nserver <span class="token punctuation">{</span>\n    auth_basic <span class="token string">&quot;请输入密码&quot;</span><span class="token punctuation">;</span>\n    auth_basic_user_file /etc/nginx/pass_file<span class="token punctuation">;</span> <span class="token comment"># 存放密码文件的路径</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="日志" tabindex="-1"><a class="header-anchor" href="#日志" aria-hidden="true">#</a> 日志</h2><table><thead><tr><th>字段</th><th>作用</th></tr></thead><tbody><tr><td>$remote_addr与$http_x_forwarded_for</td><td>记录客户端 IP 地址</td></tr><tr><td>$remote_user</td><td>记录客户端用户名称</td></tr><tr><td>$request</td><td>记录请求的 URI 和 HTTP 协议</td></tr><tr><td>$status</td><td>记录请求状态</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端的字节数，不包括响应头的大小</td></tr><tr><td>$bytes_sent</td><td>发送给客户端的总字节数</td></tr><tr><td>$connection</td><td>连接的序列号</td></tr><tr><td>$connection_requests</td><td>当前通过一个连接获得的请求数量</td></tr><tr><td>$msec</td><td>日志写入时间。单位为秒，精度是毫秒</td></tr><tr><td>$pipe</td><td>如果请求是通过 HTTP 流水线(pipelined)发送，pipe 值为“p”，否则为“.”</td></tr><tr><td>$http_referer</td><td>记录从哪个页面链接访问过来的</td></tr><tr><td>$http_user_agent</td><td>记录客户端浏览器相关信息</td></tr><tr><td>$request_length</td><td>请求的长度（包括请求行，请求头和请求正文）</td></tr><tr><td>$request_time</td><td>请求处理时间，单位为秒，精度毫秒</td></tr><tr><td>$time_iso8601</td><td>ISO8601 标准格式下的本地时间</td></tr><tr><td>$time_local</td><td>记录访问时间与时区</td></tr></tbody></table><p>日志自动分隔, 不如直接用<code>logrotate</code></p><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code>  <span class="token comment"># 不知道好不好用</span>\n    <span class="token directive"><span class="token keyword">map</span> <span class="token variable">$time_iso8601</span> <span class="token variable">$logdate</span></span> <span class="token punctuation">{</span>\n \t\t\t &#39;~^(?&lt;ymd&gt;\\d<span class="token punctuation">{</span>4<span class="token punctuation">}</span>-\\d<span class="token punctuation">{</span>2<span class="token punctuation">}</span>)&#39; $ymd<span class="token punctuation">;</span>\n\n \t\t\t<span class="token comment"># 也可以按照天进行分割</span>\n \t\t\t<span class="token comment">#&#39;~^(?&lt;ymd&gt;\\d{4}-\\d{2}-\\d{2})&#39; $ymd;</span>\n  \t\tdefault  date-not-found&#39;<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n    <span class="token directive"><span class="token keyword">access_log</span>  logs/access-<span class="token variable">$logdate</span>.log main</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',15),d={},i=(0,a(3744).Z)(d,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",p,[r,(0,e.Wm)(a)])]),(0,e._)("p",null,[(0,e._)("a",l,[c,(0,e.Wm)(a)])]),o],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);