"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[361],{685:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-45a36fb7",path:"/frontend/base/flutter.html",title:"Flutter",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Dart",slug:"dart",children:[{level:3,title:"基础语法",slug:"基础语法",children:[]}]},{level:2,title:"Flutter",slug:"flutter-1",children:[{level:3,title:"组件",slug:"组件",children:[]},{level:3,title:"Container",slug:"container",children:[]},{level:3,title:"Image",slug:"image",children:[]},{level:3,title:"ListTile",slug:"listtile",children:[]},{level:3,title:"ListView",slug:"listview",children:[]},{level:3,title:"GridView",slug:"gridview",children:[]},{level:3,title:"Layout",slug:"layout",children:[]},{level:3,title:"GestureDetector",slug:"gesturedetector",children:[]},{level:3,title:"Tooltip",slug:"tooltip",children:[]},{level:3,title:"Navigator",slug:"navigator",children:[]},{level:3,title:"StatefullWidget",slug:"statefullwidget",children:[]},{level:3,title:"BottomNavigationBar",slug:"bottomnavigationbar",children:[]},{level:3,title:"路由动画",slug:"路由动画",children:[]},{level:3,title:"Clip 裁切",slug:"clip-裁切",children:[]},{level:3,title:"Tabbar",slug:"tabbar",children:[]},{level:3,title:"页面状态",slug:"页面状态",children:[]},{level:3,title:"搜索栏",slug:"搜索栏",children:[]}]}],filePathRelative:"frontend/base/flutter.md",git:{updatedTime:1637245438e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},8412:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const t=(0,e._)("h1",{id:"flutter",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#flutter","aria-hidden":"true"},"#"),(0,e.Uk)(" Flutter")],-1),p={href:"https://pub.dev/flutter",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Flutter"),o=(0,e.uE)('<h2 id="dart" tabindex="-1"><a class="header-anchor" href="#dart" aria-hidden="true">#</a> Dart</h2><h3 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法" aria-hidden="true">#</a> 基础语法</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 变量定义</span>\n  <span class="token keyword">var</span> xx<span class="token operator">=</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">;</span>\n  <span class="token class-name">String</span><span class="token operator">?</span> oo<span class="token operator">=</span><span class="token string">&quot;$xx $oo&quot;</span><span class="token punctuation">;</span>   <span class="token comment">// ? 可以为null</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>var</code> 自动类型推断</p><p>类型: <code>String</code> <code>bool</code> <code>int</code> <code>double</code>... 常量: <code>const</code> <code>final</code></p><p><code>&#39;&#39;&#39; ...... &#39;&#39;&#39;</code> : 多行字符串</p><p>数组/集合: <code>[ ]</code> <code>&lt;String&gt;[ ]</code></p><p><code>List</code>: <code>List.filled(length,till)</code> 固定长度 <code>List.generate()</code></p><p><code>Set</code>: <code>new Set()</code></p><p><code>Map</code>: <code>var x={&quot;key&quot;:&quot;value&quot;}</code> 或 <code>new Map()</code> 访问 <code>x[&#39;key&#39;]</code></p><p>类型判断: <code>is</code></p><p>方法:</p><p>可选参数, 默认参数 <code>String? func(String oo,[int xx=0])</code></p><p>命名参数: <code>void func( String oo,{required int xx]}</code></p><p>断言 <code>!</code> 类型不匹配抛异常</p><p>类: <code>class</code></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>\n  <span class="token class-name">String</span> name<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n  late int age<span class="token punctuation">;</span>  <span class="token comment">// late 延迟初始化</span>\n  int _gender<span class="token punctuation">;</span> <span class="token comment">// 私有属性 或 私有方法 加 _</span>\n\n  <span class="token comment">// 无参构造方法</span>\n  <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>name<span class="token operator">=</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">{</span>\n\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 带参构造方法</span>\n  <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span>int age<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 简写</span>\n  <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 匿名构造方法</span>\n  <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// getter</span>\n  <span class="token keyword">get</span> oo<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;gettter&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// setter   p.xxxx=20</span>\n  <span class="token keyword">set</span> <span class="token function">xxxx</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>v<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>继承 <code>extends</code></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>\n  <span class="token class-name">T</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span>int age<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">xx</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>抽象类/接口 <code>abstract</code> dart 没有专门的 interface</p><p><code>mixins</code>: <code>class A with B,C</code></p><p>泛型: 和 java 差不多</p><p>内置库: <code>import dart:....</code> 部分引入 <code>import .... show/hide xxx</code></p><p><code>factory</code> 工厂构造方法</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Logger</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n  bool mute <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// _cache is library-private, thanks to</span>\n  <span class="token comment">// the _ in front of its name.</span>\n  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Logger</span><span class="token punctuation">&gt;</span></span> _cache <span class="token operator">=</span>\n      <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Logger</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">factory</span> <span class="token class-name">Logger</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> _cache<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>\n        name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">_internal</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">_internal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">void</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mute<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">(</span><span class="token string">&#39;UI&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlogger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Button clicked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="flutter-1" tabindex="-1"><a class="header-anchor" href="#flutter-1" aria-hidden="true">#</a> Flutter</h2><h3 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h3><p><code>StatelessWidget</code> <code>StatefullWidget</code></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">ListView</span>\n<span class="token class-name">GridView</span>\n<span class="token class-name">Row</span> <span class="token class-name">Column</span> <span class="token class-name">Stack</span> <span class="token class-name">Positioned</span> <span class="token class-name">Card</span>\n<span class="token class-name">Navigator</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container" aria-hidden="true">#</a> Container</h3><p>普通容器 <code>长</code> <code>宽</code> <code>高</code> <code>margin padding align color</code>等等、。。</p><h3 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> Image</h3><p><code>asset</code> <code>file</code> <code>memory</code> <code>network</code></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">assets</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> xxx/oo.png\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>填充模式 <code>BoxFit</code> <code>contain fill cover .......</code></p><h3 id="listtile" tabindex="-1"><a class="header-anchor" href="#listtile" aria-hidden="true">#</a> ListTile</h3><p><code>title</code> <code>leading</code></p><h3 id="listview" tabindex="-1"><a class="header-anchor" href="#listview" aria-hidden="true">#</a> ListView</h3><p><code>Widget</code>集合 <code>scrollDirection</code>: 列表方向</p><p><code>ListView.builder(itemCount: ,itemBuilder: )</code></p><h3 id="gridview" tabindex="-1"><a class="header-anchor" href="#gridview" aria-hidden="true">#</a> GridView</h3><p><code>GridView.count(...)</code></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">GridView</span><span class="token punctuation">(</span>\ngridDelegate<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>\ncrossAxisCount<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span>\n<span class="token comment">// 。。。。，</span>\nchildren<span class="token punctuation">:</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> Layout</h3><p>主轴：<code>mainAxisAlignment</code> 交叉轴: <code>crossAxisAlignment</code></p><ul><li><p>Row 水平布局 <code>Expanded</code>:拉伸</p></li><li><p>Column 垂直布局</p></li><li><p>Stack <code>alignment</code></p></li><li><p>Positioned <code>top left bottom right</code></p></li><li><p>ContrainedBox 弹性盒子 <code>contraints</code></p></li><li><p>Wrap 包裹</p></li><li><p>Padding</p></li><li><p>Card 卡片样式</p></li></ul><h3 id="gesturedetector" tabindex="-1"><a class="header-anchor" href="#gesturedetector" aria-hidden="true">#</a> GestureDetector</h3><p>手势</p><h3 id="tooltip" tabindex="-1"><a class="header-anchor" href="#tooltip" aria-hidden="true">#</a> Tooltip</h3><p>消息提示</p><h3 id="navigator" tabindex="-1"><a class="header-anchor" href="#navigator" aria-hidden="true">#</a> Navigator</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n  builder<span class="token punctuation">:</span> content<span class="token operator">=</span><span class="token operator">&gt;</span><span class="token function">xxxxWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回上一页</span>\n\n<span class="token comment">// 路由参数传递</span>\n<span class="token comment">// oo为接收子路由传递的参数信息</span>\noo<span class="token operator">=</span><span class="token keyword">await</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n  builder<span class="token punctuation">:</span> content<span class="token operator">=</span><span class="token operator">&gt;</span><span class="token function">xxxxWidget</span><span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="statefullwidget" tabindex="-1"><a class="header-anchor" href="#statefullwidget" aria-hidden="true">#</a> StatefullWidget</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">XxxWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span><span class="token punctuation">{</span>\n  _XxxWidgetState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token function">_XxxWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _XxxWidgetState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxxWidget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>\n  <span class="token comment">// .....</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">// state   setState</span>\n\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="bottomnavigationbar" tabindex="-1"><a class="header-anchor" href="#bottomnavigationbar" aria-hidden="true">#</a> BottomNavigationBar</h3><p>底部导航 <code>BottomNavigationBar</code></p><p>method: <code>onTap</code></p><p><code>Scaffold</code> ---&gt; <code>floatingActionButton</code> 浮动按钮</p><p>↓</p><p>↓ --------&gt; <code>floaingActionButtonLocation</code>:<code>FloatingActionButtonLocation.centerDocked</code></p><p><code>BottomAppBar</code> ---&gt; 融合浮动按钮组件</p><h3 id="路由动画" tabindex="-1"><a class="header-anchor" href="#路由动画" aria-hidden="true">#</a> 路由动画</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Xxx</span> <span class="token keyword">extends</span> <span class="token class-name">PageRouteBuilder</span><span class="token punctuation">{</span>\n  <span class="token class-name">Xxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">super</span><span class="token punctuation">(</span>\n    transitionDuration<span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>\n    pageBuilder<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="clip-裁切" tabindex="-1"><a class="header-anchor" href="#clip-裁切" aria-hidden="true">#</a> Clip 裁切</h3><p><code>BackdropFilter</code> : 背景过滤器</p><p><code>Path</code> path.lineTo(x,y)</p><h3 id="tabbar" tabindex="-1"><a class="header-anchor" href="#tabbar" aria-hidden="true">#</a> Tabbar</h3><p>有状态组件 <code>with SingleTickerProviderStateMixin</code></p><p><code>TabController</code> <code>TabbarView</code></p><h3 id="页面状态" tabindex="-1"><a class="header-anchor" href="#页面状态" aria-hidden="true">#</a> 页面状态</h3><p><code>with AutomaticKeepAliveClientMixin</code></p><p><code>bool get wantKeepAlive =&gt; true</code></p><h3 id="搜索栏" tabindex="-1"><a class="header-anchor" href="#搜索栏" aria-hidden="true">#</a> 搜索栏</h3><p><code>extends SearchDelegate</code></p>',74),l={},i=(0,a(3744).Z)(l,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",p,[c,(0,e.Wm)(a)])]),o],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);