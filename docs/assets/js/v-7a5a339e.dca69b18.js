"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[877],{8193:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-7a5a339e",path:"/base/base/linux.html",title:"Linux",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"LVM 磁盘管理",slug:"lvm-磁盘管理",children:[]},{level:2,title:"内核参数优化",slug:"内核参数优化",children:[]},{level:2,title:"systemctl 服务",slug:"systemctl-服务",children:[]},{level:2,title:"rsync 同步",slug:"rsync-同步",children:[]},{level:2,title:"zsh",slug:"zsh",children:[]},{level:2,title:"Vim",slug:"vim",children:[]},{level:2,title:"dash",slug:"dash",children:[]},{level:2,title:"root 用户",slug:"root-用户",children:[]},{level:2,title:"ansible",slug:"ansible",children:[{level:3,title:"playbook",slug:"playbook",children:[]}]}],filePathRelative:"base/base/linux.md",git:{updatedTime:1638863944e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},8857:(n,s,e)=>{e.r(s),e.d(s,{default:()=>Q});var a=e(6252),l=e(3577),r=e(2083);const t=(0,a._)("h1",{id:"linux",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),(0,a.Uk)(" Linux")],-1),c=(0,a._)("h2",{id:"lvm-磁盘管理",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#lvm-磁盘管理","aria-hidden":"true"},"#"),(0,a.Uk)(" LVM 磁盘管理")],-1),_=(0,a._)("blockquote",null,[(0,a._)("p",null,"物理硬盘 --\x3e 物理卷 PV --\x3e 卷组 VG --\x3e 逻辑卷 LV --\x3e 挂载")],-1),p=(0,a._)("p",null,[(0,a._)("img",{src:r,alt:"LVM"})],-1),o=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a._)("span",{class:"token comment"},"# gpt 分区"),(0,a.Uk)("\ngdisk /dev/sdn\n\n"),(0,a._)("span",{class:"token comment"},"# ..."),(0,a.Uk)("\npartprobe "),(0,a._)("span",{class:"token comment"},"# 刷新分区表"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 创建PV卷"),(0,a.Uk)("\n\npvcreate /dev/sdn /dev/sdx\n\n"),(0,a._)("span",{class:"token comment"},"# 卷组"),(0,a.Uk)("\n\nvgcreate -s 32M xxx /dev/sdn  "),(0,a._)("span",{class:"token comment"},"# -s PE最小块大小  4M整数倍"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 已有vgroup 增加一块  pv"),(0,a.Uk)("\nvgextend xxx  /dev/sdb\n\n"),(0,a._)("span",{class:"token comment"},"# 逻辑卷"),(0,a.Uk)("\n\nlvcreate -L 15G -n xxxx1  xxx"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("vg name"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"# -L 容量大小"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 格式化逻辑卷"),(0,a.Uk)("\n\nmkfs.ext4 /dev/xxx/xxxx1   "),(0,a._)("span",{class:"token comment"},"# /dev目录下会存在  卷组名/逻辑卷名的路径"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 挂载 /dev/xxx/xxxx1 到具体目录上"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 自动挂载 /etc/fstab 增加"),(0,a.Uk)("\n/dev/xxx/xxxx1 /data       ext4    defaults       "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)("       "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)("\n\n\n"),(0,a._)("span",{class:"token comment"},"# 扩展/缩小逻辑卷"),(0,a.Uk)("\nlvextend -L +50G /dev/xxx/xxxx1   "),(0,a._)("span",{class:"token comment"},"# 增加50G"),(0,a.Uk)("\nlvreduce -L -50G /dev/xxx/xxxx1   "),(0,a._)("span",{class:"token comment"},"# 减小50G"),(0,a.Uk)("\n\nlvextend -r -l +100%FREE /dev/xxx/xxxx1  "),(0,a._)("span",{class:"token comment"},"# 分配vg剩余所有空间  -r 刷新文件系统大小"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# 更新"),(0,a.Uk)("\nresize2fs /dev/xxx/xxxx1  "),(0,a._)("span",{class:"token comment"},"# etx格式"),(0,a.Uk)("\nxfs_growfs /dev/xxx/xxx1  "),(0,a._)("span",{class:"token comment"},"# xfs格式"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"15"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"16"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"17"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"18"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"19"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"20"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"21"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"22"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"23"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"24"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"25"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"26"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"27"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"28"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"29"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"30"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"31"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"32"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"33"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"34"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"35"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"36"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"37"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"38"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"39"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"40"),(0,a._)("br")])],-1),i=(0,a._)("h2",{id:"内核参数优化",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#内核参数优化","aria-hidden":"true"},"#"),(0,a.Uk)(" 内核参数优化")],-1),b=(0,a._)("p",null,[(0,a._)("code",null,"/etc/sysctl.conf"),(0,a.Uk)(" 内核参数")],-1),k=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a.Uk)("vm.swappiness"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)("\nnet.ipv4.ip_forward"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token number"},"1"),(0,a.Uk)("\nnet.ipv4.tcp_syncookies "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"1"),(0,a.Uk)("\nnet.ipv4.tcp_tw_reuse "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"1"),(0,a.Uk)("\nnet.ipv4.tcp_tw_recycle "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"1"),(0,a.Uk)("\nnet.ipv4.tcp_fin_timeout "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"30"),(0,a.Uk)("\nnet.ipv4.tcp_keepalive_time "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"1200"),(0,a.Uk)("\nnet.ipv4.tcp_max_syn_backlog "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"8192"),(0,a.Uk)("\nnet.ipv4.tcp_max_tw_buckets "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"5000"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_syncookies = 1表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_tw_reuse = 1 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_tw_recycle = 1 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_fin_timeout = 30 表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。默认是60s。"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_keepalive_time = 1200 表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.ip_local_port_range = 1024 65000 表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_max_syn_backlog = 8192 表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# net.ipv4.tcp_max_tw_buckets = 5000表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000，改为5000。"),(0,a.Uk)("\n\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"15"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"16"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"17"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"18"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"19"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"20"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"21"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"22"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"23"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"24"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"25"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"26"),(0,a._)("br")])],-1),m=(0,a._)("p",null,[(0,a._)("code",null,"/etc/security/limits.conf"),(0,a.Uk)(" 文件打开句柄限制")],-1),u=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a.Uk)("* soft nofile "),(0,a._)("span",{class:"token number"},"65535"),(0,a.Uk)("\n* hard nofile "),(0,a._)("span",{class:"token number"},"65535"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br")])],-1),U=(0,a._)("h2",{id:"systemctl-服务",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#systemctl-服务","aria-hidden":"true"},"#"),(0,a.Uk)(" systemctl 服务")],-1),d=(0,a._)("blockquote",null,[(0,a._)("p",null,"/usr/lib/systemd/下, 开机不登录就能启动的服务最好放在 /usr/lib/systemd/system 系统服务, .../user: 用户服务 需要用户登录才可以启动")],-1),x=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a._)("span",{class:"token comment"},"# [Unit]、[Service]和[Install]"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("Unit"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("   "),(0,a._)("span",{class:"token comment"},"# 主要是服务说明"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"Description"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("test   "),(0,a._)("span",{class:"token comment"},"# 简单描述服务"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"After"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("network.target    "),(0,a._)("span",{class:"token comment"},"# 描述服务类别，表示本服务需要在network服务启动后在启动"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"Before"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("xxx.service      "),(0,a._)("span",{class:"token comment"},"# 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("Service"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("  "),(0,a._)("span",{class:"token comment"},"# 核心区域"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"Type"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("forking     "),(0,a._)("span",{class:"token comment"},"# 表示后台运行模式。"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"User"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("root        "),(0,a._)("span",{class:"token comment"},"# 设置服务运行的用户"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"Group"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("root       "),(0,a._)("span",{class:"token comment"},"# 设置服务运行的用户组"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"KillMode"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("control-group   "),(0,a._)("span",{class:"token comment"},"# 定义systemd如何停止服务"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"PIDFile"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("/usr/local/test/test.pid    "),(0,a._)("span",{class:"token comment"},"# 存放PID的绝对路径"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"Restart"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("no        "),(0,a._)("span",{class:"token comment"},"# 定义服务进程退出后，systemd的重启方式，默认是不重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"ExecStart"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("/usr/local/test/bin/startup.sh    "),(0,a._)("span",{class:"token comment"},"# 服务启动命令，命令需要绝对路径"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"ExecReload"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("/xxxxx\n"),(0,a._)("span",{class:"token assign-left variable"},"ExecStop"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("/xxxxx\n"),(0,a._)("span",{class:"token assign-left variable"},"PrivateTmp"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("true                               "),(0,a._)("span",{class:"token comment"},"# 表示给服务分配独立的临时空间"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("Install"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token assign-left variable"},"WantedBy"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("multi-user.target  "),(0,a._)("span",{class:"token comment"},"# 多用户"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"#Type的类型有："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    simple(默认）：# 以ExecStart字段启动的进程为主进程"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    forking:  # ExecStart字段以fork()方式启动，此时父进程将退出，子进程将成为主进程（后台运行）。一般都设置为forking"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    oneshot:  # 类似于simple，但只执行一次，systemd会等它执行完，才启动其他服务"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    dbus：    # 类似于simple, 但会等待D-Bus信号后启动"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    notify:   # 类似于simple, 启动结束后会发出通知信号，然后systemd再启动其他服务"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    idle：    # 类似于simple，但是要等到其他任务都执行完，才会启动该服务。"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#EnvironmentFile:"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    指定配置文件，和连词号组合使用，可以避免配置文件不存在的异常。"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#Environment:"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    后面接多个不同的shell变量。"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    例如："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    Environment=DATA_DIR=/data/elk"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    Environment=LOG_DIR=/var/log/elasticsearch"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    Environment=PID_DIR=/var/run/elasticsearch"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    EnvironmentFile=-/etc/sysconfig/elasticsearch"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#连词号（-）：在所有启动设置之前，添加的变量字段，都可以加上连词号"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    表示抑制错误，即发生错误时，不影响其他命令的执行。"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    比如`EnviromentFile=-/etc/sysconfig/xxx` 表示即使文件不存在，也不会抛异常"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#KillMode的类型："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    control-group(默认)：# 当前控制组里的所有子进程，都会被杀掉"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    process: # 只杀主进程"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    mixed:   # 主进程将收到SIGTERM信号，子进程收到SIGKILL信号"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    none:    # 没有进程会被杀掉，只是执行服务的stop命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#Restart的类型："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    no(默认值)： # 退出后无操作"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    on-success:  # 只有正常退出时（退出状态码为0）,才会重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    on-failure:  # 非正常退出时，重启，包括被信号终止和超时等"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    on-abnormal: # 只有被信号终止或超时，才会重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    on-abort:    # 只有在收到没有捕捉到的信号终止时，才会重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    on-watchdog: # 超时退出时，才会重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    always:      # 不管什么退出原因，都会重启"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    # 对于守护进程，推荐用on-failure"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#RestartSec字段："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    表示systemd重启服务之前，需要等待的秒数：RestartSec: 30"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#各种Exec*字段："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    # Exec* 后面接的命令，仅接受“指令 参数 参数..”格式，不能接受<>|&等特殊字符，很多bash语法也不支持。如果想支持bash语法，需要设置Tyep=oneshot"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecStart：    # 启动服务时执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecReload：   # 重启服务时执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecStop：     # 停止服务时执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecStartPre： # 启动服务前执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecStartPost：# 启动服务后执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    ExecStopPost： # 停止服务后执行的命令"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#WantedBy字段："),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    multi-user.target: # 表示多用户命令行状态，这个设置很重要"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"#    graphical.target:  # 表示图形用户状体，它依赖于multi-user.target"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"15"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"16"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"17"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"18"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"19"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"20"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"21"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"22"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"23"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"24"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"25"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"26"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"27"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"28"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"29"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"30"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"31"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"32"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"33"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"34"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"35"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"36"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"37"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"38"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"39"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"40"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"41"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"42"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"43"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"44"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"45"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"46"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"47"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"48"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"49"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"50"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"51"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"52"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"53"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"54"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"55"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"56"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"57"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"58"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"59"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"60"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"61"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"62"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"63"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"64"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"65"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"66"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"67"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"68"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"69"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"70"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"71"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"72"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"73"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"74"),(0,a._)("br")])],-1),g=(0,a._)("h2",{id:"rsync-同步",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#rsync-同步","aria-hidden":"true"},"#"),(0,a.Uk)(" rsync 同步")],-1),h=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a._)("span",{class:"token comment"},"# 远程 ----\x3e 本地  root@xxx:/xxx  /home....."),(0,a.Uk)("\n"),(0,a._)("span",{class:"token function"},"rsync"),(0,a.Uk)(" -arPu --exclude "),(0,a._)("span",{class:"token string"},"'demo1/'"),(0,a.Uk)(" --exclude "),(0,a._)("span",{class:"token string"},"'demo2/'"),(0,a.Uk)(" --exclude "),(0,a._)("span",{class:"token string"},"'demo3/'"),(0,a.Uk)(" root@202.60.245.163:/root/test /root\n\n-v, --verbose 详细模式输出\n-q, --quiet 精简输出模式\n-c, --checksum 打开校验开关，强制对文件传输进行校验\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD\n-r, --recursive 对子目录以递归模式处理\n-R, --relative 使用相对路径信息\n-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。\n--backup-dir 将备份文件"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("如~filename"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("存放在在目录下。\n-suffix"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("SUFFIX 定义备份文件前缀\n-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("不覆盖更新的文件"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n-l, --links 保留软链结\n-L, --copy-links 想对待常规文件一样处理软链结\n--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结\n--safe-links 忽略指向SRC路径目录树以外的链结\n-H, --hard-links 保留硬链结\n-p, --perms 保持文件权限\n-o, --owner 保持文件属主信息\n-g, --group 保持文件属组信息\n-D, --devices 保持设备文件信息\n-t, --times 保持文件时间信息\n-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间\n-n, --dry-run现实哪些文件将被传输\n-W, --whole-file 拷贝文件，不进行增量检测\n-x, --one-file-system 不要跨越文件系统边界\n-B, --block-size"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("SIZE 检验算法使用的块尺寸，默认是700字节\n-e, --rsh"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("COMMAND 指定使用rsh、ssh方式进行数据同步\n--rsync-path"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token environment constant"},"PATH"),(0,a.Uk)(" 指定远程服务器上的rsync命令所在路径信息\n-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件\n--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件\n--delete 删除那些DST中SRC没有的文件\n--delete-excluded 同样删除接收端那些被该选项指定排除的文件\n--delete-after 传输结束以后再删除\n--ignore-errors 及时出现IO错误也进行删除\n--max-delete"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("NUM 最多删除NUM个文件\n--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输\n--force 强制删除目录，即使不为空\n--numeric-ids 不将数字的用户和组ID匹配为用户名和组名\n--timeout"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("TIME IP超时时间，单位为秒\n-I, --ignore-times 不跳过那些有同样的时间和长度的文件\n--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间\n--modify-window"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0\n-T --temp-dir"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("DIR 在DIR中创建临时文件\n--compare-dest"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("DIR 同样比较DIR中的文件来决定是否需要备份\n-P 等同于 --partial\n--progress 显示备份过程\n-z, --compress 对备份的文件在传输时进行压缩处理\n--exclude"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("PATTERN 指定排除不需要传输的文件模式\n--include"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("PATTERN 指定不排除而需要传输的文件模式\n--exclude-from"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("FILE 排除FILE中指定模式的文件\n--include-from"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("FILE 不排除FILE指定模式匹配的文件\n--version 打印版本信息\n--address 绑定到特定的地址\n--config"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件\n--port"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("PORT 指定其他的rsync服务端口\n--blocking-io 对远程shell使用阻塞IO\n-stats 给出某些文件的传输状态\n--progress 在传输时现实传输过程\n--log-format"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("formAT 指定日志文件格式\n--password-file"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("FILE 从FILE中得到密码\n--bwlimit"),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)("KBPS 限制I/O带宽，KBytes per second\n-h, --help 显示帮助信息\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"15"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"16"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"17"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"18"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"19"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"20"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"21"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"22"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"23"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"24"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"25"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"26"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"27"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"28"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"29"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"30"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"31"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"32"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"33"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"34"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"35"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"36"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"37"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"38"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"39"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"40"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"41"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"42"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"43"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"44"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"45"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"46"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"47"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"48"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"49"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"50"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"51"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"52"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"53"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"54"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"55"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"56"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"57"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"58"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"59"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"60"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"61"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"62"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"63"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"64"),(0,a._)("br")])],-1),v=(0,a._)("h2",{id:"zsh",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zsh","aria-hidden":"true"},"#"),(0,a.Uk)(" zsh")],-1),y=(0,a._)("blockquote",null,[(0,a._)("p",null,"home end 键 & 小键盘")],-1),f=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a._)("span",{class:"token comment"},"# key bindings"),(0,a.Uk)("\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[1~"')]),(0,a.Uk)(" beginning-of-line\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[4~"')]),(0,a.Uk)(" end-of-line\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[5~"')]),(0,a.Uk)(" beginning-of-history\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[6~"')]),(0,a.Uk)(" end-of-history\n\n"),(0,a._)("span",{class:"token comment"},"# for rxvt"),(0,a.Uk)("\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[8~"')]),(0,a.Uk)(" end-of-line\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[7~"')]),(0,a.Uk)(" beginning-of-line\n"),(0,a._)("span",{class:"token comment"},"# for non RH/Debian xterm, can't hurt for RH/DEbian xterm"),(0,a.Uk)("\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('OH"')]),(0,a.Uk)(" beginning-of-line\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('OF"')]),(0,a.Uk)(" end-of-line\n"),(0,a._)("span",{class:"token comment"},"# for freebsd console"),(0,a.Uk)("\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[H"')]),(0,a.Uk)(" beginning-of-line\nbindkey "),(0,a._)("span",{class:"token string"},[(0,a.Uk)('"'),(0,a._)("span",{class:"token entity",title:"\\e"},"\\e"),(0,a.Uk)('[F"')]),(0,a.Uk)(" end-of-line\n"),(0,a._)("span",{class:"token comment"},"# completion in the middle of a line"),(0,a.Uk)("\nbindkey "),(0,a._)("span",{class:"token string"},"'^i'"),(0,a.Uk)(" expand-or-complete-prefix\n\n"),(0,a._)("span",{class:"token comment"},"# Fix numeric keypad"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"# 0 . Enter"),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Op"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"0"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[On"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"."'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[OM"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"^M"'),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"# 1 2 3"),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Oq"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"1"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Or"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"2"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Os"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"3"'),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"# 4 5 6"),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ot"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"4"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ou"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"5"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ov"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"6"'),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"# 7 8 9"),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ow"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"7"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ox"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"8"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Oy"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"9"'),(0,a.Uk)("\n"),(0,a._)("span",{class:"token comment"},"# + - * /"),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Ol"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"+"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Om"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"-"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Oj"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"*"'),(0,a.Uk)("\nbindkey -s "),(0,a._)("span",{class:"token string"},'"^[Oo"'),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"/"'),(0,a.Uk)("\n\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"15"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"16"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"17"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"18"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"19"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"20"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"21"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"22"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"23"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"24"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"25"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"26"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"27"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"28"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"29"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"30"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"31"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"32"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"33"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"34"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"35"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"36"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"37"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"38"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"39"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"40"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"41"),(0,a._)("br")])],-1),E=(0,a._)("h2",{id:"vim",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#vim","aria-hidden":"true"},"#"),(0,a.Uk)(" Vim")],-1),I=(0,a._)("blockquote",null,[(0,a._)("p",null,".vimrc")],-1),T=(0,a._)("p",null,[(0,a.Uk)("搜索高亮 "),(0,a._)("code",null,"set hlsearch")],-1),S=(0,a._)("h2",{id:"dash",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#dash","aria-hidden":"true"},"#"),(0,a.Uk)(" dash")],-1),R=(0,a._)("p",null,"ubuntu 下 declare 报错:",-1),w=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a._)("span",{class:"token function"},"sudo"),(0,a.Uk)(" dpkg-reconfigure dash\n"),(0,a._)("span",{class:"token comment"},"# 选否  ubuntu默认sh 指向了dash  通过上边命令  解除dash与sh的关联"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br")])],-1),D=(0,a._)("h2",{id:"root-用户",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#root-用户","aria-hidden":"true"},"#"),(0,a.Uk)(" root 用户")],-1),O=(0,a._)("p",null,[(0,a.Uk)("为"),(0,a._)("code",null,"root"),(0,a.Uk)("用户设置密码")],-1),P=(0,a._)("p",null,[(0,a._)("code",null,"ubuntu"),(0,a.Uk)("开启"),(0,a._)("code",null,"root"),(0,a.Uk)(": sshd 配置文件 "),(0,a._)("code",null,"PermitRootLogin yes")],-1),L=(0,a._)("h2",{id:"ansible",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#ansible","aria-hidden":"true"},"#"),(0,a.Uk)(" ansible")],-1),M=(0,a._)("p",null,[(0,a._)("code",null,"ansible all -m ping -v")],-1),F=(0,a._)("p",null,[(0,a.Uk)("默认模块"),(0,a._)("code",null,"command"),(0,a.Uk)(" 有些命令无法执行")],-1),A=(0,a._)("p",null,[(0,a.Uk)("执行 shell "),(0,a._)("code",null,"ansible xxx -m shell -a 'ls /'")],-1),C=(0,a._)("p",null,[(0,a.Uk)("执行 shell 脚本 "),(0,a._)("code",null,"ansible xxx -m script -a ./xx.sh")],-1),N=(0,a._)("p",null,[(0,a._)("code",null,"copy"),(0,a.Uk)(":支持目录")],-1),z=(0,a._)("p",null,[(0,a._)("code",null,"fetch"),(0,a.Uk)(":只能单文件")],-1),G=(0,a._)("p",null,[(0,a._)("code",null,"file"),(0,a.Uk)(": 操作文件 "),(0,a._)("code",null,"ansible xxx -m file -a 'path=/data/xx.log state=touch group=xx owner=xx mode=777'")],-1),V=(0,a._)("p",null,[(0,a._)("code",null,"unarchive"),(0,a.Uk)(": copy=yes/no")],-1),B=(0,a._)("p",null,[(0,a._)("code",null,"archive"),(0,a.Uk)(),(0,a._)("code",null,"hostname"),(0,a.Uk)(),(0,a._)("code",null,"cron"),(0,a.Uk)(),(0,a._)("code",null,"user"),(0,a.Uk)(),(0,a._)("code",null,"setup")],-1),W=(0,a._)("h3",{id:"playbook",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#playbook","aria-hidden":"true"},"#"),(0,a.Uk)(" playbook")],-1),q=(0,a._)("p",null,[(0,a._)("code",null,"ansible-playbook xxx.yaml [--check --list-hosts --list-tags --list-tasks --limit -v]")],-1),H=(0,a._)("li",null,[(0,a._)("p",null,"hosts"),(0,a._)("p",null,"执行任务的主机")],-1),K=(0,a._)("li",null,[(0,a._)("p",null,"tasks"),(0,a._)("p",null,"任务")],-1),Y=(0,a._)("p",null,"variables",-1),Z=(0,a._)("p",null,"变量",-1),j=(0,a._)("p",null,"定义变量:",-1),X=(0,a.uE)('<li><p>templates</p><p>模板, templates 目录下定义</p><p><code>xxx.j2</code> 文件定义变量, task 执行时自动替换</p></li><li><p>tags</p><p>标签</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> xxx<span class="token punctuation">:</span>yyyy\n  <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root\n  <span class="token key atrule">gather_facts</span><span class="token punctuation">:</span> no <span class="token comment"># 是否收集主机信息</span>\n  <span class="token key atrule">vars</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">xx</span><span class="token punctuation">:</span> oo\n\n  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kkk\n      <span class="token key atrule">tags</span><span class="token punctuation">:</span> pppp  <span class="token comment"># 执行的时候指定tag执行 -t pppp</span>\n      <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> ooo\n      <span class="token key atrule">module</span><span class="token punctuation">:</span> args\n      <span class="token key atrule">notify</span><span class="token punctuation">:</span> handlersName <span class="token comment"># 触发handlers执行</span>\n\n  <span class="token key atrule">handlers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> variables_name <span class="token punctuation">}</span>  <span class="token comment"># 变量</span>\n      <span class="token key atrule">module</span><span class="token punctuation">:</span> args\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li>',2),J={},Q=(0,e(3744).Z)(J,[["render",function(n,s){return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,c,_,p,o,i,b,k,m,u,U,d,x,g,h,v,y,f,E,I,T,S,R,w,D,O,P,L,M,F,A,C,N,z,G,V,B,W,q,(0,a._)("ul",null,[H,K,(0,a._)("li",null,[Y,Z,j,(0,a._)("pre",null,[(0,a._)("code",null,'  * `命令行参数 -e xxx=ooo`\n\n  * 直接使用`setup`的系统信息 `gather_facts`要打开\n\n  * 单独文件定义\n\n  `inventory`主机清单中指定变量\n\n  ```conf\n  [xxx] # 单个指定\n  192.168.100.1 xx=ooo\n  192.168.100.2 xx=oop\n\n  [xxx:vars] # 指定一组\n  mm=kk\n\n  ```\n\n  * set_fact模块定义\n\n      ```yaml\n      set_fact:\n          php_redis_package: "'+(0,l.zw)(n.__php_redis_package)+'"\n      ```\n',1)])]),X])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[e,a]of s)n[e]=a;return n}},2083:(n,s,e)=>{n.exports=e.p+"assets/img/lvm.0280fb57.png"}}]);