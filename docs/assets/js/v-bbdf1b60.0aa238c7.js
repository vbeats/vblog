"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[525],{3723:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-bbdf1b60",path:"/data/base/redis.html",title:"Redis",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Redis",slug:"redis-1",children:[{level:3,title:"缓存策略:",slug:"缓存策略",children:[]},{level:3,title:"redis-cluster",slug:"redis-cluster",children:[]},{level:3,title:"springboot 查询缓存",slug:"springboot-查询缓存",children:[]}]}],filePathRelative:"data/base/redis.md",git:{updatedTime:1636365007e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},1841:(n,s,e)=>{e.r(s),e.d(s,{default:()=>R});var a=e(6252),l=e(1111);const t=(0,a._)("h1",{id:"redis",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#redis","aria-hidden":"true"},"#"),(0,a.Uk)(" Redis")],-1),c=(0,a._)("p",null,"嘿嘿嘿",-1),i=(0,a._)("h2",{id:"redis-1",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#redis-1","aria-hidden":"true"},"#"),(0,a.Uk)(" Redis")],-1),o=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a.Uk)("redis-cli "),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" info clients\nredis-cli "),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" client list\nredis-cli "),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" config get "),(0,a._)("span",{class:"token function"},"timeout"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token number"},"1"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"timeout"'),(0,a.Uk)("\n"),(0,a._)("span",{class:"token number"},"2"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"0"'),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"#0表示不开启空闲清除"),(0,a.Uk)("\n设置空闲清理时间\n\nredis-cli "),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" config "),(0,a._)("span",{class:"token builtin class-name"},"set"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"timeout"),(0,a.Uk)(),(0,a._)("span",{class:"token number"},"600"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br")])],-1),r=(0,a._)("h3",{id:"缓存策略",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#缓存策略","aria-hidden":"true"},"#"),(0,a.Uk)(" 缓存策略:")],-1),u=(0,a._)("p",null,[(0,a.Uk)("开启内存限制 "),(0,a._)("code",null,"maxmemory bytes")],-1),p=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,[(0,a.Uk)("noeviction: 不删除策略, 达到最大内存限制时, 如果需要更多内存, 直接返回错误信息。\nallkeys-lru: 所有key通用"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" 优先删除最近最少使用"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("less recently used ,LRU"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" 的 key\nvolatile-lru: 只限于设置了 expire 的部分"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" 优先删除最近最少使用"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("less recently used ,LRU"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" 的 key\nallkeys-random: 所有key通用"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" 随机删除一部分 key\nvolatile-random: 只限于设置了 expire 的部分"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" 随机删除一部分 key\nvolatile-ttl: 只限于设置了 expire 的部分"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" 优先删除剩余时间"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("time to live,TTL"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" 短的key\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br")])],-1),_=(0,a._)("ol",null,[(0,a._)("li",null,"RDB: 手动/自动触发,dump 快照方式, save m n: 表示 m 秒之内数据集存在 n 次修改时，自动触发 bgsave"),(0,a._)("li",null,"AOF: 独立 log 日志记录写操作 always:每次写操作都记录 everysec: 1 秒同步记录一次 no:不同步记录"),(0,a._)("li",null,"redis 密码配置 requirepass xxx"),(0,a._)("li",null,"主从配置 replicaof(slaveof) ip port"),(0,a._)("li",null,"master 有密码的话 masterauth xxx")],-1),k=(0,a._)("blockquote",null,[(0,a._)("p",null,"哨兵配置 sentinel.conf")],-1),d=(0,a._)("ol",null,[(0,a._)("li",null,"sentinel monitor master_name ip port 票数(1,2....) ------\x3e监听 master, 集群下保证 master_name 一致, 最好每个节点都放一个 sentinel.conf"),(0,a._)("li",null,"启动哨兵 redis-sentinel /.....sentinel.conf"),(0,a._)("li",null,"有 redis-server 挂掉, 哨兵会重新选择 master")],-1),b=(0,a._)("p",null,[(0,a._)("img",{src:l,alt:"redis"})],-1),m=(0,a._)("h3",{id:"redis-cluster",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#redis-cluster","aria-hidden":"true"},"#"),(0,a.Uk)(" redis-cluster")],-1),h=(0,a._)("blockquote",null,[(0,a._)("p",null,"集群吊炸天")],-1),U=(0,a._)("p",null,"spring boot 配置哨兵:",-1),g=(0,a._)("div",{class:"language-yaml ext-yml line-numbers-mode"},[(0,a._)("pre",{class:"language-yaml"},[(0,a._)("code",null,[(0,a._)("span",{class:"token key atrule"},"spring"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token key atrule"},"redis"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token key atrule"},"sentinel"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)("\n      "),(0,a._)("span",{class:"token key atrule"},"master"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" testmaster\n      "),(0,a._)("span",{class:"token key atrule"},"nodes"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" 192.168.142.88"),(0,a._)("span",{class:"token punctuation"},":"),(0,a._)("span",{class:"token number"},"26379"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("192.168.142.89"),(0,a._)("span",{class:"token punctuation"},":"),(0,a._)("span",{class:"token number"},"26379"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("192.168.142.90"),(0,a._)("span",{class:"token punctuation"},":"),(0,a._)("span",{class:"token number"},"26379"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br")])],-1),v=(0,a._)("h3",{id:"springboot-查询缓存",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#springboot-查询缓存","aria-hidden":"true"},"#"),(0,a.Uk)(" springboot 查询缓存")],-1),y=(0,a._)("ol",null,[(0,a._)("li",null,"springboot 启动类不要忘记@Enablecaching 注解"),(0,a._)("li",null,"Controller 查询操作, @Cacheable(cacheNames='',key=''), 查询方法返回的对象要能序列化"),(0,a._)("li",null,"更新或者删除缓存@CachePut(cacheNames='',key=''),更新缓存数据 @CacheEvict(cacheNames = \"\"),清除缓存"),(0,a._)("li",null,"key 如果不填,默认为方法的参数. 类上配置@cacheconfig(cacheNames=''),方法上可以省略 cachename 配置"),(0,a._)("li",null,"key 可以对应方法的参数, condition 缓存的条件, unless 不缓存的条件(#result 代表返回值)")],-1),x=(0,a._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,a._)("pre",{class:"language-java"},[(0,a._)("code",null,[(0,a._)("span",{class:"token annotation punctuation"},"@GetMapping"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token string"},'"/list"'),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token annotation punctuation"},"@Cacheable"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("cacheNames"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token string"},'"product"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("key"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token string"},'"#id"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("condition"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token string"},'"#id.length>0"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("unless"),(0,a._)("span",{class:"token operator"},"="),(0,a._)("span",{class:"token string"},'"#result.getCode()!=200"'),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token keyword"},"public"),(0,a.Uk)(),(0,a._)("span",{class:"token class-name"},"Result"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"list"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token annotation punctuation"},"@RequestParam"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)('"id'),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"int"),(0,a.Uk)(" id"),(0,a._)("span",{class:"token punctuation"},")"),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token keyword"},"return"),(0,a.Uk)(" xxxxx"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br")])],-1),f={},R=(0,e(3744).Z)(f,[["render",function(n,s){return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,c,i,o,r,u,p,_,k,d,b,m,h,U,g,v,y,x],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[e,a]of s)n[e]=a;return n}},1111:(n,s,e)=>{n.exports=e.p+"assets/img/redis.03d57770.png"}}]);