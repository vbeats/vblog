"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[839],{9671:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-5a966b99",path:"/backend/base/golang.html",title:"GoLang 🦔",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"time",slug:"time",children:[]},{level:2,title:"IO",slug:"io",children:[]},{level:2,title:"Goroutine",slug:"goroutine",children:[]},{level:2,title:"Channel",slug:"channel",children:[]},{level:2,title:"grpc",slug:"grpc",children:[]},{level:2,title:"go kit",slug:"go-kit",children:[{level:3,title:"Transport",slug:"transport",children:[]},{level:3,title:"Endpoint",slug:"endpoint",children:[]},{level:3,title:"Service",slug:"service",children:[]},{level:3,title:"mux",slug:"mux",children:[]}]},{level:2,title:"go-micro",slug:"go-micro",children:[]}],filePathRelative:"backend/base/golang.md",git:{updatedTime:1636376439e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},1113:(n,e,a)=>{a.r(e),a.d(e,{default:()=>p});var s=a(6252);const t=(0,s.uE)('<h1 id="golang-🦔" tabindex="-1"><a class="header-anchor" href="#golang-🦔" aria-hidden="true">#</a> GoLang 🦔</h1><h2 id="time" tabindex="-1"><a class="header-anchor" href="#time" aria-hidden="true">#</a> time</h2><blockquote><p>2006-01-02 15:04:05</p></blockquote><h2 id="io" tabindex="-1"><a class="header-anchor" href="#io" aria-hidden="true">#</a> IO</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>os filepath path buferio ioutil\nReader Writer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="goroutine" tabindex="-1"><a class="header-anchor" href="#goroutine" aria-hidden="true">#</a> Goroutine</h2><blockquote><p>go test()</p></blockquote><p><code>runtime sync</code></p><p>互斥锁 读写锁 waitgroup</p><h2 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> Channel</h2><blockquote><p>var xx chan int , xx=make(chan int)</p></blockquote><blockquote><p>xx &lt;- data , data,ok := &lt;- xx</p></blockquote><p>发送方可以关闭通道 close(xx)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> n<span class="token operator">:=</span> <span class="token keyword">range</span> cc<span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="grpc" tabindex="-1"><a class="header-anchor" href="#grpc" aria-hidden="true">#</a> grpc</h2><blockquote><p>protoc -I proto/ protp/helloworld.proto --go_out=plugins=grpc:proto</p></blockquote><p>你猜这是什么意思</p><h2 id="go-kit" tabindex="-1"><a class="header-anchor" href="#go-kit" aria-hidden="true">#</a> go kit</h2><h3 id="transport" tabindex="-1"><a class="header-anchor" href="#transport" aria-hidden="true">#</a> Transport</h3><p>通信模块 支持<code>http</code> <code>grpc</code> <code>rpc</code> <code>thrift</code></p><p><code>Encode/Decode</code></p><h3 id="endpoint" tabindex="-1"><a class="header-anchor" href="#endpoint" aria-hidden="true">#</a> Endpoint</h3><p>处理相关的请求/响应</p><p><code>type Endpoint func(ctx context.Context, request interface{}) (response interface{}, err error)</code></p><h3 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> Service</h3><p>业务接口 实现</p><h3 id="mux" tabindex="-1"><a class="header-anchor" href="#mux" aria-hidden="true">#</a> mux</h3>',27),o=(0,s.Uk)("路由组件 "),r={href:"https://github.com/gorilla/mux",target:"_blank",rel:"noopener noreferrer"},c=(0,s.Uk)("文档"),l=(0,s.uE)('<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>r <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">NewRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> HomeHandler<span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/products&quot;</span><span class="token punctuation">,</span> ProductsHandler<span class="token punctuation">)</span>\nr<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/articles&quot;</span><span class="token punctuation">,</span> ArticlesHandler<span class="token punctuation">)</span>\nhttp<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="go-micro" tabindex="-1"><a class="header-anchor" href="#go-micro" aria-hidden="true">#</a> go-micro</h2>',2),i={},p=(0,a(3744).Z)(i,[["render",function(n,e){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[t,(0,s._)("p",null,[o,(0,s._)("a",r,[c,(0,s.Wm)(a)])]),l],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[a,s]of e)n[a]=s;return n}}}]);