"use strict";(self.webpackChunkvblog=self.webpackChunkvblog||[]).push([[284],{2784:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-00f54144",path:"/data/base/hdfs.html",title:"HDFS",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Name Node",slug:"name-node",children:[]},{level:2,title:"Data Node",slug:"data-node",children:[]},{level:2,title:"Client",slug:"client",children:[]},{level:2,title:"Secondary NameNode",slug:"secondary-namenode",children:[]},{level:2,title:"回收站",slug:"回收站",children:[]},{level:2,title:"命令",slug:"命令",children:[]},{level:2,title:"Java",slug:"java",children:[]}],filePathRelative:"data/base/hdfs.md",git:{updatedTime:1639112941e3,contributors:[{name:"bootvue",email:"bootvue@gmail.com",commits:1}]}}},7935:(a,n,s)=>{s.r(n),s.d(n,{default:()=>o});const e=(0,s(6252).uE)('<h1 id="hdfs" tabindex="-1"><a class="header-anchor" href="#hdfs" aria-hidden="true">#</a> HDFS</h1><blockquote><p>分布式文件系统, 文件数据只追加,不修改</p></blockquote><h2 id="name-node" tabindex="-1"><a class="header-anchor" href="#name-node" aria-hidden="true">#</a> Name Node</h2><ol><li>默认数据块大小 128M df.blocksize</li><li>data 元数据, 内存存储, 磁盘 FsImage 备份</li><li>内存数据更新, Edits 磁盘文件不断追加操作</li><li>data 数据校验和</li><li>维护 data node 的心跳检查</li></ol><h2 id="data-node" tabindex="-1"><a class="header-anchor" href="#data-node" aria-hidden="true">#</a> Data Node</h2><ol><li>集群启动后, data node 间隔上报数据块信息</li><li>小文件归档, 还是独立的文件, 对于 name node 封装成一个整体</li></ol><h2 id="client" tabindex="-1"><a class="header-anchor" href="#client" aria-hidden="true">#</a> Client</h2><blockquote><p>切分数据, 与 namenode&amp;datanode 交互</p></blockquote><h2 id="secondary-namenode" tabindex="-1"><a class="header-anchor" href="#secondary-namenode" aria-hidden="true">#</a> Secondary NameNode</h2><ol><li>监控 hdfs 运行状态, 辅助恢复 name node, 定期合并 FsImage 和 Edits &amp; 更新内存中的 NameNode 数据</li><li>checkpoint 默认 1 小时, txns 次数检查(合并 fsimage&amp;edits)</li></ol><h2 id="回收站" tabindex="-1"><a class="header-anchor" href="#回收站" aria-hidden="true">#</a> 回收站</h2><blockquote><p>core-site.xml</p></blockquote><ol><li>fs.trash.interval 0 禁用, 其他值: 存活时间(minutes)</li><li>fs.trash.checkpoint.interval 检查时间间隔</li></ol><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><blockquote><p>hadoop fs or hdfs dfs, dfs 是 fs 的实现类</p></blockquote><blockquote><p>hadoop distcp hdfs://.... hdfs://... 集群间数据拷贝</p></blockquote><blockquote><p>hadoop archive -archiveName xxx.har -p /data/.... /dest/... 归档文件</p></blockquote><blockquote><p>hadoop fs -ls -R har:///dest/...</p></blockquote><h2 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h2><blockquote><p>通过 FileSystem 操作 HDFS</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>        <span class="token class-name">Configuration</span> cfg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>URI<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;hdfs://hadoop1:9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cfg<span class="token punctuation">,</span> <span class="token string">&quot;battery&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//boolean mkdirs = fs.mkdirs(new Path(&quot;/data&quot;));</span>\n        fs<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">&quot;/data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',21),t={},o=(0,s(3744).Z)(t,[["render",function(a,n){return e}]])},3744:(a,n)=>{n.Z=(a,n)=>{for(const[s,e]of n)a[s]=e;return a}}}]);